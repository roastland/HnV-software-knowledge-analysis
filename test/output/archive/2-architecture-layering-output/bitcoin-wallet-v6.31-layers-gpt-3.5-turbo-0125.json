{
  "de.schildbach.wallet": {
    "qualifiedName": "de.schildbach.wallet",
    "classes": {
      "de.schildbach.wallet.Configuration": {
        "qualifiedName": "de.schildbach.wallet.Configuration",
        "methods": {
          "de.schildbach.wallet.Configuration.armBackupReminder()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.armBackupReminder()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.changeLogVersionCodeCrossed(int,int)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.changeLogVersionCodeCrossed(int,int)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.Configuration.de.schildbach.wallet.Configuration(android.content.SharedPreferences,android.content.res.Resources)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.de.schildbach.wallet.Configuration(android.content.SharedPreferences,android.content.res.Resources)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.disarmBackupReminder()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.disarmBackupReminder()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.Configuration.getBestChainHeightEver()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getBestChainHeightEver()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.getBlockExplorer()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getBlockExplorer()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.getBtcBase()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getBtcBase()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.Configuration.getBtcShift()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getBtcShift()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.Configuration.getCachedExchangeRate()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getCachedExchangeRate()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.Configuration.getConnectivityNotificationEnabled()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getConnectivityNotificationEnabled()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.getDisclaimerEnabled()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getDisclaimerEnabled()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.getExchangeCurrencyCode()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getExchangeCurrencyCode()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.getFormat()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getFormat()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.Configuration.getLastBackupTime()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getLastBackupTime()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.getLastExchangeDirection()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getLastExchangeDirection()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.getLastUsedAgo()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getLastUsedAgo()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.getMaxPrecisionFormat()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getMaxPrecisionFormat()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.Configuration.getOwnName()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getOwnName()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.Configuration.getSendCoinsAutoclose()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getSendCoinsAutoclose()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.getTrustedPeerHost()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getTrustedPeerHost()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.getTrustedPeerOnly()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.getTrustedPeerOnly()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.Configuration.hasBeenUsed()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.hasBeenUsed()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.maybeIncrementBestChainHeightEver(int)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.maybeIncrementBestChainHeightEver(int)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.remindBackup()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.remindBackup()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.Configuration.remindBalance()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.remindBalance()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.Configuration.setCachedExchangeRate(de.schildbach.wallet.data.ExchangeRate)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.setCachedExchangeRate(de.schildbach.wallet.data.ExchangeRate)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.Configuration.setExchangeCurrencyCode(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.setExchangeCurrencyCode(java.lang.String)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.setLastExchangeDirection(boolean)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.setLastExchangeDirection(boolean)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.setRemindBalance(boolean)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.setRemindBalance(boolean)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.touchLastUsed()": {
            "qualifiedName": "de.schildbach.wallet.Configuration.touchLastUsed()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.Configuration.unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.updateLastBluetoothAddress(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.updateLastBluetoothAddress(java.lang.String)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.Configuration.updateLastVersionCode(int)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.updateLastVersionCode(int)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.Configuration.versionCodeCrossed(int,int)": {
            "qualifiedName": "de.schildbach.wallet.Configuration.versionCodeCrossed(int,int)",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.Constants": {
        "qualifiedName": "de.schildbach.wallet.Constants",
        "methods": {
          "de.schildbach.wallet.Constants.de.schildbach.wallet.Constants()": {
            "qualifiedName": "de.schildbach.wallet.Constants.de.schildbach.wallet.Constants()",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.Constants$Files": {
        "qualifiedName": "de.schildbach.wallet.Constants$Files",
        "methods": {
          "de.schildbach.wallet.Constants$Files.de.schildbach.wallet.Constants$Files()": {
            "qualifiedName": "de.schildbach.wallet.Constants$Files.de.schildbach.wallet.Constants$Files()",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.Logging": {
        "qualifiedName": "de.schildbach.wallet.Logging",
        "methods": {
          "de.schildbach.wallet.Logging.de.schildbach.wallet.Logging()": {
            "qualifiedName": "de.schildbach.wallet.Logging.de.schildbach.wallet.Logging()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.Logging.init(java.io.File)": {
            "qualifiedName": "de.schildbach.wallet.Logging.init(java.io.File)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.WalletApplication": {
        "qualifiedName": "de.schildbach.wallet.WalletApplication",
        "methods": {
          "de.schildbach.wallet.WalletApplication.applicationPackageFlavor()": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.applicationPackageFlavor()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.WalletApplication.autosaveWalletNow()": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.autosaveWalletNow()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.WalletApplication.de.schildbach.wallet.WalletApplication()": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.de.schildbach.wallet.WalletApplication()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.WalletApplication.getConfiguration()": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.getConfiguration()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.WalletApplication.getWallet()": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.getWallet()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.WalletApplication.getWalletAsync(de.schildbach.wallet.WalletApplication$OnWalletLoadedListener)": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.getWalletAsync(de.schildbach.wallet.WalletApplication$OnWalletLoadedListener)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.WalletApplication.httpUserAgent()": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.httpUserAgent()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.WalletApplication.httpUserAgent(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.httpUserAgent(java.lang.String)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.WalletApplication.maxConnectedPeers()": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.maxConnectedPeers()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.WalletApplication.onCreate()": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.onCreate()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.WalletApplication.packageInfo()": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.packageInfo()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.WalletApplication.processDirectTransaction(org.bitcoinj.core.Transaction)": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.processDirectTransaction(org.bitcoinj.core.Transaction)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.WalletApplication.replaceWallet(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.replaceWallet(org.bitcoinj.wallet.Wallet)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.WalletApplication.scryptIterationsTarget()": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.scryptIterationsTarget()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.WalletApplication.versionLine(android.content.pm.PackageInfo)": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication.versionLine(android.content.pm.PackageInfo)",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.WalletApplication$OnWalletLoadedListener": {
        "qualifiedName": "de.schildbach.wallet.WalletApplication$OnWalletLoadedListener",
        "methods": {
          "de.schildbach.wallet.WalletApplication$OnWalletLoadedListener.onWalletLoaded(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.WalletApplication$OnWalletLoadedListener.onWalletLoaded(org.bitcoinj.wallet.Wallet)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.WalletBalanceWidgetProvider": {
        "qualifiedName": "de.schildbach.wallet.WalletBalanceWidgetProvider",
        "methods": {
          "de.schildbach.wallet.WalletBalanceWidgetProvider.de.schildbach.wallet.WalletBalanceWidgetProvider()": {
            "qualifiedName": "de.schildbach.wallet.WalletBalanceWidgetProvider.de.schildbach.wallet.WalletBalanceWidgetProvider()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.WalletBalanceWidgetProvider.onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.WalletBalanceWidgetProvider.onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.WalletBalanceWidgetProvider.onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])": {
            "qualifiedName": "de.schildbach.wallet.WalletBalanceWidgetProvider.onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.WalletBalanceWidgetProvider.updateWidgets(android.content.Context,org.bitcoinj.core.Coin,de.schildbach.wallet.data.ExchangeRate)": {
            "qualifiedName": "de.schildbach.wallet.WalletBalanceWidgetProvider.updateWidgets(android.content.Context,org.bitcoinj.core.Coin,de.schildbach.wallet.data.ExchangeRate)",
            "layer": "Presentation Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.data": {
    "qualifiedName": "de.schildbach.wallet.data",
    "classes": {
      "de.schildbach.wallet.data.AbstractWalletLiveData": {
        "qualifiedName": "de.schildbach.wallet.data.AbstractWalletLiveData",
        "methods": {
          "de.schildbach.wallet.data.AbstractWalletLiveData.de.schildbach.wallet.data.AbstractWalletLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.data.AbstractWalletLiveData.de.schildbach.wallet.data.AbstractWalletLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.AbstractWalletLiveData.de.schildbach.wallet.data.AbstractWalletLiveData(de.schildbach.wallet.WalletApplication,long)": {
            "qualifiedName": "de.schildbach.wallet.data.AbstractWalletLiveData.de.schildbach.wallet.data.AbstractWalletLiveData(de.schildbach.wallet.WalletApplication,long)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.data.AddressBookDao": {
        "qualifiedName": "de.schildbach.wallet.data.AddressBookDao",
        "methods": {
          "de.schildbach.wallet.data.AddressBookDao.delete(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.AddressBookDao.delete(java.lang.String)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.AddressBookDao.get(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.AddressBookDao.get(java.lang.String)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.AddressBookDao.getAll()": {
            "qualifiedName": "de.schildbach.wallet.data.AddressBookDao.getAll()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.AddressBookDao.getAllExcept(java.util.Set)": {
            "qualifiedName": "de.schildbach.wallet.data.AddressBookDao.getAllExcept(java.util.Set)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.AddressBookDao.insertOrUpdate(de.schildbach.wallet.data.AddressBookEntry)": {
            "qualifiedName": "de.schildbach.wallet.data.AddressBookDao.insertOrUpdate(de.schildbach.wallet.data.AddressBookEntry)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.AddressBookDao.resolveLabel(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.AddressBookDao.resolveLabel(java.lang.String)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.data.AddressBookEntry": {
        "qualifiedName": "de.schildbach.wallet.data.AddressBookEntry",
        "methods": {
          "de.schildbach.wallet.data.AddressBookEntry.asMap(java.util.List)": {
            "qualifiedName": "de.schildbach.wallet.data.AddressBookEntry.asMap(java.util.List)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.AddressBookEntry.de.schildbach.wallet.data.AddressBookEntry(java.lang.String,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.AddressBookEntry.de.schildbach.wallet.data.AddressBookEntry(java.lang.String,java.lang.String)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.AddressBookEntry.getAddress()": {
            "qualifiedName": "de.schildbach.wallet.data.AddressBookEntry.getAddress()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.AddressBookEntry.getLabel()": {
            "qualifiedName": "de.schildbach.wallet.data.AddressBookEntry.getLabel()",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.data.AppDatabase": {
        "qualifiedName": "de.schildbach.wallet.data.AppDatabase",
        "methods": {
          "de.schildbach.wallet.data.AppDatabase.addressBookDao()": {
            "qualifiedName": "de.schildbach.wallet.data.AppDatabase.addressBookDao()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.AppDatabase.de.schildbach.wallet.data.AppDatabase()": {
            "qualifiedName": "de.schildbach.wallet.data.AppDatabase.de.schildbach.wallet.data.AppDatabase()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.AppDatabase.getDatabase(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.data.AppDatabase.getDatabase(android.content.Context)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.data.BlockchainStateLiveData": {
        "qualifiedName": "de.schildbach.wallet.data.BlockchainStateLiveData",
        "methods": {
          "de.schildbach.wallet.data.BlockchainStateLiveData.de.schildbach.wallet.data.BlockchainStateLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.data.BlockchainStateLiveData.de.schildbach.wallet.data.BlockchainStateLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.BlockchainStateLiveData.onServiceConnected(android.content.ComponentName,android.os.IBinder)": {
            "qualifiedName": "de.schildbach.wallet.data.BlockchainStateLiveData.onServiceConnected(android.content.ComponentName,android.os.IBinder)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.BlockchainStateLiveData.onServiceDisconnected(android.content.ComponentName)": {
            "qualifiedName": "de.schildbach.wallet.data.BlockchainStateLiveData.onServiceDisconnected(android.content.ComponentName)",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.data.ConfigFormatLiveData": {
        "qualifiedName": "de.schildbach.wallet.data.ConfigFormatLiveData",
        "methods": {
          "de.schildbach.wallet.data.ConfigFormatLiveData.de.schildbach.wallet.data.ConfigFormatLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.data.ConfigFormatLiveData.de.schildbach.wallet.data.ConfigFormatLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.ConfigFormatLiveData.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.ConfigFormatLiveData.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.data.ConfigOwnNameLiveData": {
        "qualifiedName": "de.schildbach.wallet.data.ConfigOwnNameLiveData",
        "methods": {
          "de.schildbach.wallet.data.ConfigOwnNameLiveData.de.schildbach.wallet.data.ConfigOwnNameLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.data.ConfigOwnNameLiveData.de.schildbach.wallet.data.ConfigOwnNameLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.ConfigOwnNameLiveData.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.ConfigOwnNameLiveData.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.data.DynamicFeeLiveData": {
        "qualifiedName": "de.schildbach.wallet.data.DynamicFeeLiveData",
        "methods": {
          "de.schildbach.wallet.data.DynamicFeeLiveData.de.schildbach.wallet.data.DynamicFeeLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.data.DynamicFeeLiveData.de.schildbach.wallet.data.DynamicFeeLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.data.ExchangeRate": {
        "qualifiedName": "de.schildbach.wallet.data.ExchangeRate",
        "methods": {
          "de.schildbach.wallet.data.ExchangeRate.de.schildbach.wallet.data.ExchangeRate(org.bitcoinj.utils.ExchangeRate,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRate.de.schildbach.wallet.data.ExchangeRate(org.bitcoinj.utils.ExchangeRate,java.lang.String)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.ExchangeRate.getCurrencyCode()": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRate.getCurrencyCode()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.ExchangeRate.toString()": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRate.toString()",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.data.ExchangeRatesProvider": {
        "qualifiedName": "de.schildbach.wallet.data.ExchangeRatesProvider",
        "methods": {
          "de.schildbach.wallet.data.ExchangeRatesProvider.contentUri(java.lang.String,boolean)": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRatesProvider.contentUri(java.lang.String,boolean)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.ExchangeRatesProvider.de.schildbach.wallet.data.ExchangeRatesProvider()": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRatesProvider.de.schildbach.wallet.data.ExchangeRatesProvider()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.ExchangeRatesProvider.delete(android.net.Uri,java.lang.String,java.lang.String[])": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRatesProvider.delete(android.net.Uri,java.lang.String,java.lang.String[])",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.ExchangeRatesProvider.getExchangeRate(android.database.Cursor)": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRatesProvider.getExchangeRate(android.database.Cursor)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.ExchangeRatesProvider.getType(android.net.Uri)": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRatesProvider.getType(android.net.Uri)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.ExchangeRatesProvider.insert(android.net.Uri,android.content.ContentValues)": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRatesProvider.insert(android.net.Uri,android.content.ContentValues)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.ExchangeRatesProvider.onCreate()": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRatesProvider.onCreate()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.ExchangeRatesProvider.query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRatesProvider.query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.ExchangeRatesProvider.update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])": {
            "qualifiedName": "de.schildbach.wallet.data.ExchangeRatesProvider.update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.data.PaymentIntent": {
        "qualifiedName": "de.schildbach.wallet.data.PaymentIntent",
        "methods": {
          "de.schildbach.wallet.data.PaymentIntent.blank()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.blank()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.de.schildbach.wallet.data.PaymentIntent(de.schildbach.wallet.data.PaymentIntent$Standard,java.lang.String,java.lang.String,de.schildbach.wallet.data.PaymentIntent$Output[],java.lang.String,java.lang.String,byte[],java.lang.String,byte[])": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.de.schildbach.wallet.data.PaymentIntent(de.schildbach.wallet.data.PaymentIntent$Standard,java.lang.String,java.lang.String,de.schildbach.wallet.data.PaymentIntent$Output[],java.lang.String,java.lang.String,byte[],java.lang.String,byte[])",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.describeContents()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.describeContents()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.data.PaymentIntent.equalsAddress(de.schildbach.wallet.data.PaymentIntent)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.equalsAddress(de.schildbach.wallet.data.PaymentIntent)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.equalsAmount(de.schildbach.wallet.data.PaymentIntent)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.equalsAmount(de.schildbach.wallet.data.PaymentIntent)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.from(java.lang.String,java.lang.String,org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.from(java.lang.String,java.lang.String,org.bitcoinj.core.Coin)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.fromAddress(java.lang.String,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.fromAddress(java.lang.String,java.lang.String)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.fromAddress(org.bitcoinj.core.Address,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.fromAddress(org.bitcoinj.core.Address,java.lang.String)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.fromBitcoinUri(org.bitcoinj.uri.BitcoinURI)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.fromBitcoinUri(org.bitcoinj.uri.BitcoinURI)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.getAddress()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.getAddress()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.getAmount()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.getAmount()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.hasAddress()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.hasAddress()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.hasAmount()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.hasAmount()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.hasOutputs()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.hasOutputs()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.hasPayee()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.hasPayee()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.hasPaymentRequestUrl()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.hasPaymentRequestUrl()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.hasPaymentUrl()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.hasPaymentUrl()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.isBluetoothPaymentRequestUrl()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.isBluetoothPaymentRequestUrl()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.data.PaymentIntent.isBluetoothPaymentUrl()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.isBluetoothPaymentUrl()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.isExtendedBy(de.schildbach.wallet.data.PaymentIntent)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.isExtendedBy(de.schildbach.wallet.data.PaymentIntent)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.isHttpPaymentRequestUrl()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.isHttpPaymentRequestUrl()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.isHttpPaymentUrl()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.isHttpPaymentUrl()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.isSupportedPaymentRequestUrl()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.isSupportedPaymentRequestUrl()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.data.PaymentIntent.isSupportedPaymentUrl()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.isSupportedPaymentUrl()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.mayEditAddress()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.mayEditAddress()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.mayEditAmount()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.mayEditAmount()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.mergeWithEditedValues(org.bitcoinj.core.Coin,org.bitcoinj.core.Address)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.mergeWithEditedValues(org.bitcoinj.core.Coin,org.bitcoinj.core.Address)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.toSendRequest()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.toSendRequest()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.toString()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.toString()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent.writeToParcel(android.os.Parcel,int)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent.writeToParcel(android.os.Parcel,int)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.data.PaymentIntent$Output": {
        "qualifiedName": "de.schildbach.wallet.data.PaymentIntent$Output",
        "methods": {
          "de.schildbach.wallet.data.PaymentIntent$Output.de.schildbach.wallet.data.PaymentIntent$Output(org.bitcoinj.core.Coin,org.bitcoinj.script.Script)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent$Output.de.schildbach.wallet.data.PaymentIntent$Output(org.bitcoinj.core.Coin,org.bitcoinj.script.Script)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent$Output.describeContents()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent$Output.describeContents()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.data.PaymentIntent$Output.hasAmount()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent$Output.hasAmount()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent$Output.toString()": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent$Output.toString()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent$Output.valueOf(org.bitcoinj.protocols.payments.PaymentProtocol$Output)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent$Output.valueOf(org.bitcoinj.protocols.payments.PaymentProtocol$Output)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.PaymentIntent$Output.writeToParcel(android.os.Parcel,int)": {
            "qualifiedName": "de.schildbach.wallet.data.PaymentIntent$Output.writeToParcel(android.os.Parcel,int)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.data.SelectedExchangeRateLiveData": {
        "qualifiedName": "de.schildbach.wallet.data.SelectedExchangeRateLiveData",
        "methods": {
          "de.schildbach.wallet.data.SelectedExchangeRateLiveData.de.schildbach.wallet.data.SelectedExchangeRateLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.data.SelectedExchangeRateLiveData.de.schildbach.wallet.data.SelectedExchangeRateLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.SelectedExchangeRateLiveData.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.SelectedExchangeRateLiveData.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.data.SingleLiveEvent": {
        "qualifiedName": "de.schildbach.wallet.data.SingleLiveEvent",
        "methods": {
          "de.schildbach.wallet.data.SingleLiveEvent.call()": {
            "qualifiedName": "de.schildbach.wallet.data.SingleLiveEvent.call()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.data.SingleLiveEvent.de.schildbach.wallet.data.SingleLiveEvent()": {
            "qualifiedName": "de.schildbach.wallet.data.SingleLiveEvent.de.schildbach.wallet.data.SingleLiveEvent()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.data.SingleLiveEvent.observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer)": {
            "qualifiedName": "de.schildbach.wallet.data.SingleLiveEvent.observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.SingleLiveEvent.postCall()": {
            "qualifiedName": "de.schildbach.wallet.data.SingleLiveEvent.postCall()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.SingleLiveEvent.setValue(java.lang.Object)": {
            "qualifiedName": "de.schildbach.wallet.data.SingleLiveEvent.setValue(java.lang.Object)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.data.ThrottelingLiveData": {
        "qualifiedName": "de.schildbach.wallet.data.ThrottelingLiveData",
        "methods": {
          "de.schildbach.wallet.data.ThrottelingLiveData.de.schildbach.wallet.data.ThrottelingLiveData()": {
            "qualifiedName": "de.schildbach.wallet.data.ThrottelingLiveData.de.schildbach.wallet.data.ThrottelingLiveData()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.data.ThrottelingLiveData.de.schildbach.wallet.data.ThrottelingLiveData(long)": {
            "qualifiedName": "de.schildbach.wallet.data.ThrottelingLiveData.de.schildbach.wallet.data.ThrottelingLiveData(long)",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.data.TimeLiveData": {
        "qualifiedName": "de.schildbach.wallet.data.TimeLiveData",
        "methods": {
          "de.schildbach.wallet.data.TimeLiveData.de.schildbach.wallet.data.TimeLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.data.TimeLiveData.de.schildbach.wallet.data.TimeLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.data.WalletBalanceLiveData": {
        "qualifiedName": "de.schildbach.wallet.data.WalletBalanceLiveData",
        "methods": {
          "de.schildbach.wallet.data.WalletBalanceLiveData.de.schildbach.wallet.data.WalletBalanceLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.data.WalletBalanceLiveData.de.schildbach.wallet.data.WalletBalanceLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.data.WalletBalanceLiveData.de.schildbach.wallet.data.WalletBalanceLiveData(de.schildbach.wallet.WalletApplication,org.bitcoinj.wallet.Wallet.BalanceType)": {
            "qualifiedName": "de.schildbach.wallet.data.WalletBalanceLiveData.de.schildbach.wallet.data.WalletBalanceLiveData(de.schildbach.wallet.WalletApplication,org.bitcoinj.wallet.Wallet.BalanceType)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.data.WalletBalanceLiveData.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.data.WalletBalanceLiveData.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener": {
        "qualifiedName": "de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener",
        "methods": {
          "de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener.onCoinsReceived(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener.onCoinsReceived(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener.onCoinsSent(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener.onCoinsSent(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener.onReorganize(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener.onReorganize(org.bitcoinj.wallet.Wallet)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener.onWalletChanged(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.data.WalletBalanceLiveData$WalletListener.onWalletChanged(org.bitcoinj.wallet.Wallet)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.data.WalletLiveData": {
        "qualifiedName": "de.schildbach.wallet.data.WalletLiveData",
        "methods": {
          "de.schildbach.wallet.data.WalletLiveData.de.schildbach.wallet.data.WalletLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.data.WalletLiveData.de.schildbach.wallet.data.WalletLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Cross-Cutting"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.integration.android": {
    "qualifiedName": "de.schildbach.wallet.integration.android",
    "classes": {
      "de.schildbach.wallet.integration.android.BitcoinIntegration": {
        "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration",
        "methods": {
          "de.schildbach.wallet.integration.android.BitcoinIntegration.de.schildbach.wallet.integration.android.BitcoinIntegration()": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.de.schildbach.wallet.integration.android.BitcoinIntegration()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.paymentFromResult(android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.paymentFromResult(android.content.Intent)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.paymentRequestFromIntent(android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.paymentRequestFromIntent(android.content.Intent)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.paymentToResult(android.content.Intent,byte[])": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.paymentToResult(android.content.Intent,byte[])",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.request(android.content.Context,byte[])": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.request(android.content.Context,byte[])",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.request(android.content.Context,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.request(android.content.Context,java.lang.String)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.request(android.content.Context,java.lang.String,long)": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.request(android.content.Context,java.lang.String,long)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.requestForResult(android.app.Activity,int,byte[])": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.requestForResult(android.app.Activity,int,byte[])",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.requestForResult(android.app.Activity,int,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.requestForResult(android.app.Activity,int,java.lang.String)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.requestForResult(android.app.Activity,int,java.lang.String,long)": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.requestForResult(android.app.Activity,int,java.lang.String,long)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.transactionHashFromResult(android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.transactionHashFromResult(android.content.Intent)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.integration.android.BitcoinIntegration.transactionHashToResult(android.content.Intent,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.integration.android.BitcoinIntegration.transactionHashToResult(android.content.Intent,java.lang.String)",
            "layer": "Data Source Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.integration.sample": {
    "qualifiedName": "de.schildbach.wallet.integration.sample",
    "classes": {
      "de.schildbach.wallet.integration.sample.SampleActivity": {
        "qualifiedName": "de.schildbach.wallet.integration.sample.SampleActivity",
        "methods": {
          "de.schildbach.wallet.integration.sample.SampleActivity.de.schildbach.wallet.integration.sample.SampleActivity()": {
            "qualifiedName": "de.schildbach.wallet.integration.sample.SampleActivity.de.schildbach.wallet.integration.sample.SampleActivity()",
            "layer": "Presentation Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.offline": {
    "qualifiedName": "de.schildbach.wallet.offline",
    "classes": {
      "de.schildbach.wallet.offline.AcceptBluetoothService": {
        "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothService",
        "methods": {
          "de.schildbach.wallet.offline.AcceptBluetoothService.de.schildbach.wallet.offline.AcceptBluetoothService()": {
            "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothService.de.schildbach.wallet.offline.AcceptBluetoothService()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.offline.AcceptBluetoothService.onBind(android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothService.onBind(android.content.Intent)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.offline.AcceptBluetoothService.onCreate()": {
            "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothService.onCreate()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.offline.AcceptBluetoothService.onDestroy()": {
            "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothService.onDestroy()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.offline.AcceptBluetoothService.onStartCommand(android.content.Intent,int,int)": {
            "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothService.onStartCommand(android.content.Intent,int,int)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.offline.AcceptBluetoothThread": {
        "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothThread",
        "methods": {
          "de.schildbach.wallet.offline.AcceptBluetoothThread.stopAccepting()": {
            "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothThread.stopAccepting()",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread": {
        "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread",
        "methods": {
          "de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread.de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread(android.bluetooth.BluetoothAdapter)": {
            "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread.de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread(android.bluetooth.BluetoothAdapter)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread.run()": {
            "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothThread$ClassicBluetoothThread.run()",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread": {
        "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread",
        "methods": {
          "de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread.de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread(android.bluetooth.BluetoothAdapter)": {
            "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread.de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread(android.bluetooth.BluetoothAdapter)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread.run()": {
            "qualifiedName": "de.schildbach.wallet.offline.AcceptBluetoothThread$PaymentProtocolThread.run()",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.offline.DirectPaymentTask": {
        "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask",
        "methods": {
          "de.schildbach.wallet.offline.DirectPaymentTask.de.schildbach.wallet.offline.DirectPaymentTask(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback)": {
            "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask.de.schildbach.wallet.offline.DirectPaymentTask(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.offline.DirectPaymentTask.send(org.bitcoin.protocols.payments.Protos.Payment)": {
            "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask.send(org.bitcoin.protocols.payments.Protos.Payment)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask": {
        "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask",
        "methods": {
          "de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask.de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback,android.bluetooth.BluetoothAdapter,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask.de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback,android.bluetooth.BluetoothAdapter,java.lang.String)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask.send(org.bitcoin.protocols.payments.Protos.Payment)": {
            "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask$BluetoothPaymentTask.send(org.bitcoin.protocols.payments.Protos.Payment)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask": {
        "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask",
        "methods": {
          "de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask.de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback,java.lang.String,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask.de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask(android.os.Handler,de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback,java.lang.String,java.lang.String)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask.send(org.bitcoin.protocols.payments.Protos.Payment)": {
            "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask$HttpPaymentTask.send(org.bitcoin.protocols.payments.Protos.Payment)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback": {
        "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback",
        "methods": {
          "de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback.onFail(int,java.lang.Object[])": {
            "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback.onFail(int,java.lang.Object[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback.onResult(boolean)": {
            "qualifiedName": "de.schildbach.wallet.offline.DirectPaymentTask$ResultCallback.onResult(boolean)",
            "layer": "Service Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.service": {
    "qualifiedName": "de.schildbach.wallet.service",
    "classes": {
      "de.schildbach.wallet.service.BlockchainService": {
        "qualifiedName": "de.schildbach.wallet.service.BlockchainService",
        "methods": {
          "de.schildbach.wallet.service.BlockchainService.broadcastTransaction(android.content.Context,org.bitcoinj.core.Transaction)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.broadcastTransaction(android.content.Context,org.bitcoinj.core.Transaction)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.de.schildbach.wallet.service.BlockchainService()": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.de.schildbach.wallet.service.BlockchainService()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.getBlockchainState()": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.getBlockchainState()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.getConnectedPeers()": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.getConnectedPeers()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.getRecentBlocks(int)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.getRecentBlocks(int)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.onBind(android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.onBind(android.content.Intent)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.onCreate()": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.onCreate()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.onDestroy()": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.onDestroy()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.onStartCommand(android.content.Intent,int,int)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.onStartCommand(android.content.Intent,int,int)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.onTrimMemory(int)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.onTrimMemory(int)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.onUnbind(android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.onUnbind(android.content.Intent)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.resetBlockchain(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.resetBlockchain(android.content.Context)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.scheduleStart(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.scheduleStart(de.schildbach.wallet.WalletApplication)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.start(android.content.Context,boolean)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.start(android.content.Context,boolean)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService.stop(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService.stop(android.content.Context)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData": {
        "qualifiedName": "de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData",
        "methods": {
          "de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData.de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData.de.schildbach.wallet.service.BlockchainService$ImpedimentsLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.service.BlockchainService$LocalBinder": {
        "qualifiedName": "de.schildbach.wallet.service.BlockchainService$LocalBinder",
        "methods": {
          "de.schildbach.wallet.service.BlockchainService$LocalBinder.de.schildbach.wallet.service.BlockchainService$LocalBinder()": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$LocalBinder.de.schildbach.wallet.service.BlockchainService$LocalBinder()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService$LocalBinder.getService()": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$LocalBinder.getService()",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData": {
        "qualifiedName": "de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData",
        "methods": {
          "de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData.de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData.de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData(org.bitcoinj.wallet.Wallet)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData$WalletListener": {
        "qualifiedName": "de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData$WalletListener",
        "methods": {
          "de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData$WalletListener.onCoinsReceived(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData$WalletListener.onCoinsReceived(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData$WalletListener.onCoinsSent(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$NewTransactionLiveData$WalletListener.onCoinsSent(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener": {
        "qualifiedName": "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener",
        "methods": {
          "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener.de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener()": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener.de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener.onPeerConnected(org.bitcoinj.core.Peer,int)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener.onPeerConnected(org.bitcoinj.core.Peer,int)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener.onPeerDisconnected(org.bitcoinj.core.Peer,int)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener.onPeerDisconnected(org.bitcoinj.core.Peer,int)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener.stop()": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainService$PeerConnectivityListener.stop()",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.service.BlockchainState": {
        "qualifiedName": "de.schildbach.wallet.service.BlockchainState",
        "methods": {
          "de.schildbach.wallet.service.BlockchainState.de.schildbach.wallet.service.BlockchainState(java.util.Date,int,boolean,java.util.Set)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainState.de.schildbach.wallet.service.BlockchainState(java.util.Date,int,boolean,java.util.Set)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.service.BlockchainState.fromIntent(android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainState.fromIntent(android.content.Intent)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.service.BlockchainState.putExtras(android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.service.BlockchainState.putExtras(android.content.Intent)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.service.BootstrapReceiver": {
        "qualifiedName": "de.schildbach.wallet.service.BootstrapReceiver",
        "methods": {
          "de.schildbach.wallet.service.BootstrapReceiver.de.schildbach.wallet.service.BootstrapReceiver()": {
            "qualifiedName": "de.schildbach.wallet.service.BootstrapReceiver.de.schildbach.wallet.service.BootstrapReceiver()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.service.BootstrapReceiver.onReceive(android.content.Context,android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.service.BootstrapReceiver.onReceive(android.content.Context,android.content.Intent)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.service.InactivityNotificationService": {
        "qualifiedName": "de.schildbach.wallet.service.InactivityNotificationService",
        "methods": {
          "de.schildbach.wallet.service.InactivityNotificationService.de.schildbach.wallet.service.InactivityNotificationService()": {
            "qualifiedName": "de.schildbach.wallet.service.InactivityNotificationService.de.schildbach.wallet.service.InactivityNotificationService()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.InactivityNotificationService.onCreate()": {
            "qualifiedName": "de.schildbach.wallet.service.InactivityNotificationService.onCreate()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.InactivityNotificationService.startMaybeShowNotification(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.service.InactivityNotificationService.startMaybeShowNotification(android.content.Context)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.service.UpgradeWalletService": {
        "qualifiedName": "de.schildbach.wallet.service.UpgradeWalletService",
        "methods": {
          "de.schildbach.wallet.service.UpgradeWalletService.de.schildbach.wallet.service.UpgradeWalletService()": {
            "qualifiedName": "de.schildbach.wallet.service.UpgradeWalletService.de.schildbach.wallet.service.UpgradeWalletService()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.UpgradeWalletService.onCreate()": {
            "qualifiedName": "de.schildbach.wallet.service.UpgradeWalletService.onCreate()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.service.UpgradeWalletService.startUpgrade(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.service.UpgradeWalletService.startUpgrade(android.content.Context)",
            "layer": "Service Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.ui": {
    "qualifiedName": "de.schildbach.wallet.ui",
    "classes": {
      "de.schildbach.wallet.ui.AbstractWalletActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.AbstractWalletActivity",
        "methods": {
          "de.schildbach.wallet.ui.AbstractWalletActivity.de.schildbach.wallet.ui.AbstractWalletActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.AbstractWalletActivity.de.schildbach.wallet.ui.AbstractWalletActivity()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.AbstractWalletActivity.getWalletApplication()": {
            "qualifiedName": "de.schildbach.wallet.ui.AbstractWalletActivity.getWalletApplication()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.AbstractWalletActivity.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.AbstractWalletActivity.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AbstractWalletActivity.reportFullyDrawn()": {
            "qualifiedName": "de.schildbach.wallet.ui.AbstractWalletActivity.reportFullyDrawn()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AbstractWalletActivity.setShowWhenLocked(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.AbstractWalletActivity.setShowWhenLocked(boolean)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.AddressAndLabel": {
        "qualifiedName": "de.schildbach.wallet.ui.AddressAndLabel",
        "methods": {
          "de.schildbach.wallet.ui.AddressAndLabel.de.schildbach.wallet.ui.AddressAndLabel(org.bitcoinj.core.Address,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressAndLabel.de.schildbach.wallet.ui.AddressAndLabel(org.bitcoinj.core.Address,java.lang.String)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.AddressAndLabel.de.schildbach.wallet.ui.AddressAndLabel(org.bitcoinj.core.NetworkParameters,java.lang.String,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressAndLabel.de.schildbach.wallet.ui.AddressAndLabel(org.bitcoinj.core.NetworkParameters,java.lang.String,java.lang.String)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.AddressAndLabel.describeContents()": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressAndLabel.describeContents()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.AddressAndLabel.equals(java.lang.Object)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressAndLabel.equals(java.lang.Object)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.AddressAndLabel.hashCode()": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressAndLabel.hashCode()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.AddressAndLabel.toString()": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressAndLabel.toString()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AddressAndLabel.writeToParcel(android.os.Parcel,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressAndLabel.writeToParcel(android.os.Parcel,int)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.AddressBookActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity",
        "methods": {
          "de.schildbach.wallet.ui.AddressBookActivity.de.schildbach.wallet.ui.AddressBookActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity.de.schildbach.wallet.ui.AddressBookActivity()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AddressBookActivity.start(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity.start(android.content.Context)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter": {
        "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter",
        "methods": {
          "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.support.v4.app.Fragment)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.support.v4.app.Fragment)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.destroyItem(android.view.ViewGroup,int,java.lang.Object)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.destroyItem(android.view.ViewGroup,int,java.lang.Object)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.finishUpdate(android.view.ViewGroup)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.finishUpdate(android.view.ViewGroup)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.getCount()": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.getCount()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.instantiateItem(android.view.ViewGroup,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.instantiateItem(android.view.ViewGroup,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.isViewFromObject(android.view.View,java.lang.Object)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.isViewFromObject(android.view.View,java.lang.Object)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)": {
            "qualifiedName": "de.schildbach.wallet.ui.AddressBookActivity$TwoFragmentAdapter.setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.AlertDialogsFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.AlertDialogsFragment",
        "methods": {
          "de.schildbach.wallet.ui.AlertDialogsFragment.add(android.support.v4.app.FragmentManager)": {
            "qualifiedName": "de.schildbach.wallet.ui.AlertDialogsFragment.add(android.support.v4.app.FragmentManager)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AlertDialogsFragment.de.schildbach.wallet.ui.AlertDialogsFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.AlertDialogsFragment.de.schildbach.wallet.ui.AlertDialogsFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AlertDialogsFragment.onActivityCreated(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.AlertDialogsFragment.onActivityCreated(android.os.Bundle)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.AlertDialogsFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.AlertDialogsFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.AlertDialogsFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.AlertDialogsFragment.onCreate(android.os.Bundle)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.AlertDialogsFragment.onDestroy()": {
            "qualifiedName": "de.schildbach.wallet.ui.AlertDialogsFragment.onDestroy()",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.BitmapFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.BitmapFragment",
        "methods": {
          "de.schildbach.wallet.ui.BitmapFragment.de.schildbach.wallet.ui.BitmapFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.BitmapFragment.de.schildbach.wallet.ui.BitmapFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.BitmapFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.BitmapFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.BitmapFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.BitmapFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.BitmapFragment.show(android.support.v4.app.FragmentManager,android.graphics.Bitmap)": {
            "qualifiedName": "de.schildbach.wallet.ui.BitmapFragment.show(android.support.v4.app.FragmentManager,android.graphics.Bitmap)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.CircularProgressView": {
        "qualifiedName": "de.schildbach.wallet.ui.CircularProgressView",
        "methods": {
          "de.schildbach.wallet.ui.CircularProgressView.de.schildbach.wallet.ui.CircularProgressView(android.content.Context,android.util.AttributeSet)": {
            "qualifiedName": "de.schildbach.wallet.ui.CircularProgressView.de.schildbach.wallet.ui.CircularProgressView(android.content.Context,android.util.AttributeSet)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CircularProgressView.getBaseline()": {
            "qualifiedName": "de.schildbach.wallet.ui.CircularProgressView.getBaseline()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CircularProgressView.setColors(int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CircularProgressView.setColors(int,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CircularProgressView.setMaxProgress(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CircularProgressView.setMaxProgress(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CircularProgressView.setMaxSize(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CircularProgressView.setMaxSize(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CircularProgressView.setProgress(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CircularProgressView.setProgress(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CircularProgressView.setSize(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CircularProgressView.setSize(int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.CurrencyAmountView": {
        "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView",
        "methods": {
          "de.schildbach.wallet.ui.CurrencyAmountView.de.schildbach.wallet.ui.CurrencyAmountView(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.de.schildbach.wallet.ui.CurrencyAmountView(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.de.schildbach.wallet.ui.CurrencyAmountView(android.content.Context,android.util.AttributeSet)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.de.schildbach.wallet.ui.CurrencyAmountView(android.content.Context,android.util.AttributeSet)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.getAmount()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.getAmount()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.getTextView()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.getTextView()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setAmount(org.bitcoinj.core.Monetary,boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setAmount(org.bitcoinj.core.Monetary,boolean)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setAmountSigned(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setAmountSigned(boolean)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setContextButton(int,de.schildbach.wallet.ui.OnClickListener)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setContextButton(int,de.schildbach.wallet.ui.OnClickListener)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setCurrencySymbol(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setCurrencySymbol(java.lang.String)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setEnabled(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setEnabled(boolean)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setHint(org.bitcoinj.core.Monetary)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setHint(org.bitcoinj.core.Monetary)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setHintFormat(org.bitcoinj.utils.MonetaryFormat)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setHintFormat(org.bitcoinj.utils.MonetaryFormat)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setInputFormat(org.bitcoinj.utils.MonetaryFormat)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setInputFormat(org.bitcoinj.utils.MonetaryFormat)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setListener(de.schildbach.wallet.ui.CurrencyAmountView$Listener)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setListener(de.schildbach.wallet.ui.CurrencyAmountView$Listener)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setNextFocusId(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setNextFocusId(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setStrikeThru(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setStrikeThru(boolean)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setTextColor(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setTextColor(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView.setValidateAmount(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView.setValidateAmount(boolean)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.CurrencyAmountView$Listener": {
        "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView$Listener",
        "methods": {
          "de.schildbach.wallet.ui.CurrencyAmountView$Listener.changed()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView$Listener.changed()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView$Listener.focusChanged(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView$Listener.focusChanged(boolean)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener": {
        "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener",
        "methods": {
          "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener.afterTextChanged(android.text.Editable)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener.afterTextChanged(android.text.Editable)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener.beforeTextChanged(java.lang.CharSequence,int,int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener.beforeTextChanged(java.lang.CharSequence,int,int,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener.onFocusChange(android.view.View,boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener.onFocusChange(android.view.View,boolean)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener.onTextChanged(java.lang.CharSequence,int,int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener.onTextChanged(java.lang.CharSequence,int,int,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener.setFire(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyAmountView$TextViewListener.setFire(boolean)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.CurrencyCalculatorLink": {
        "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink",
        "methods": {
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.activeTextView()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.activeTextView()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.de.schildbach.wallet.ui.CurrencyCalculatorLink(de.schildbach.wallet.ui.CurrencyAmountView,de.schildbach.wallet.ui.CurrencyAmountView)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.de.schildbach.wallet.ui.CurrencyCalculatorLink(de.schildbach.wallet.ui.CurrencyAmountView,de.schildbach.wallet.ui.CurrencyAmountView)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.getAmount()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.getAmount()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.getExchangeDirection()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.getExchangeDirection()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.getExchangeRate()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.getExchangeRate()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.hasAmount()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.hasAmount()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.requestFocus()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.requestFocus()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.setBtcAmount(org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.setBtcAmount(org.bitcoinj.core.Coin)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.setEnabled(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.setEnabled(boolean)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.setExchangeDirection(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.setExchangeDirection(boolean)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.setExchangeRate(org.bitcoinj.utils.ExchangeRate)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.setExchangeRate(org.bitcoinj.utils.ExchangeRate)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.setListener(de.schildbach.wallet.ui.CurrencyAmountView$Listener)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.setListener(de.schildbach.wallet.ui.CurrencyAmountView$Listener)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyCalculatorLink.setNextFocusId(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyCalculatorLink.setNextFocusId(int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.CurrencySymbolDrawable": {
        "qualifiedName": "de.schildbach.wallet.ui.CurrencySymbolDrawable",
        "methods": {
          "de.schildbach.wallet.ui.CurrencySymbolDrawable.de.schildbach.wallet.ui.CurrencySymbolDrawable(java.lang.String,float,int,float)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencySymbolDrawable.de.schildbach.wallet.ui.CurrencySymbolDrawable(java.lang.String,float,int,float)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencySymbolDrawable.draw(android.graphics.Canvas)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencySymbolDrawable.draw(android.graphics.Canvas)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencySymbolDrawable.getIntrinsicWidth()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencySymbolDrawable.getIntrinsicWidth()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencySymbolDrawable.getOpacity()": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencySymbolDrawable.getOpacity()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencySymbolDrawable.setAlpha(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencySymbolDrawable.setAlpha(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencySymbolDrawable.setColorFilter(android.graphics.ColorFilter)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencySymbolDrawable.setColorFilter(android.graphics.ColorFilter)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.CurrencyTextView": {
        "qualifiedName": "de.schildbach.wallet.ui.CurrencyTextView",
        "methods": {
          "de.schildbach.wallet.ui.CurrencyTextView.de.schildbach.wallet.ui.CurrencyTextView(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyTextView.de.schildbach.wallet.ui.CurrencyTextView(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyTextView.de.schildbach.wallet.ui.CurrencyTextView(android.content.Context,android.util.AttributeSet)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyTextView.de.schildbach.wallet.ui.CurrencyTextView(android.content.Context,android.util.AttributeSet)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyTextView.setAlwaysSigned(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyTextView.setAlwaysSigned(boolean)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyTextView.setAmount(org.bitcoinj.core.Monetary)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyTextView.setAmount(org.bitcoinj.core.Monetary)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyTextView.setFormat(org.bitcoinj.utils.MonetaryFormat)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyTextView.setFormat(org.bitcoinj.utils.MonetaryFormat)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyTextView.setInsignificantRelativeSize(float)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyTextView.setInsignificantRelativeSize(float)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyTextView.setPrefixColor(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyTextView.setPrefixColor(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyTextView.setPrefixScaleX(float)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyTextView.setPrefixScaleX(float)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.CurrencyTextView.setStrikeThru(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.CurrencyTextView.setStrikeThru(boolean)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.DialogBuilder": {
        "qualifiedName": "de.schildbach.wallet.ui.DialogBuilder",
        "methods": {
          "de.schildbach.wallet.ui.DialogBuilder.de.schildbach.wallet.ui.DialogBuilder(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.DialogBuilder.de.schildbach.wallet.ui.DialogBuilder(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DialogBuilder.setIcon(android.graphics.drawable.Drawable)": {
            "qualifiedName": "de.schildbach.wallet.ui.DialogBuilder.setIcon(android.graphics.drawable.Drawable)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DialogBuilder.setIcon(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.DialogBuilder.setIcon(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DialogBuilder.setMessage(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.DialogBuilder.setMessage(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DialogBuilder.setMessage(java.lang.CharSequence)": {
            "qualifiedName": "de.schildbach.wallet.ui.DialogBuilder.setMessage(java.lang.CharSequence)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DialogBuilder.setTitle(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.DialogBuilder.setTitle(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DialogBuilder.setTitle(java.lang.CharSequence)": {
            "qualifiedName": "de.schildbach.wallet.ui.DialogBuilder.setTitle(java.lang.CharSequence)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DialogBuilder.singleDismissButton(android.content.DialogInterface.OnClickListener)": {
            "qualifiedName": "de.schildbach.wallet.ui.DialogBuilder.singleDismissButton(android.content.DialogInterface.OnClickListener)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DialogBuilder.warn(android.content.Context,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.DialogBuilder.warn(android.content.Context,int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.DividerItemDecoration": {
        "qualifiedName": "de.schildbach.wallet.ui.DividerItemDecoration",
        "methods": {
          "de.schildbach.wallet.ui.DividerItemDecoration.de.schildbach.wallet.ui.DividerItemDecoration(android.content.Context,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.DividerItemDecoration.de.schildbach.wallet.ui.DividerItemDecoration(android.content.Context,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DividerItemDecoration.drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)": {
            "qualifiedName": "de.schildbach.wallet.ui.DividerItemDecoration.drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DividerItemDecoration.drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)": {
            "qualifiedName": "de.schildbach.wallet.ui.DividerItemDecoration.drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DividerItemDecoration.getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView)": {
            "qualifiedName": "de.schildbach.wallet.ui.DividerItemDecoration.getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DividerItemDecoration.onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView)": {
            "qualifiedName": "de.schildbach.wallet.ui.DividerItemDecoration.onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.DividerItemDecoration.setOrientation(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.DividerItemDecoration.setOrientation(int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.EditAddressBookEntryFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.EditAddressBookEntryFragment",
        "methods": {
          "de.schildbach.wallet.ui.EditAddressBookEntryFragment.de.schildbach.wallet.ui.EditAddressBookEntryFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.EditAddressBookEntryFragment.de.schildbach.wallet.ui.EditAddressBookEntryFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.EditAddressBookEntryFragment.edit(android.support.v4.app.FragmentManager,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.EditAddressBookEntryFragment.edit(android.support.v4.app.FragmentManager,java.lang.String)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.EditAddressBookEntryFragment.edit(android.support.v4.app.FragmentManager,org.bitcoinj.core.Address)": {
            "qualifiedName": "de.schildbach.wallet.ui.EditAddressBookEntryFragment.edit(android.support.v4.app.FragmentManager,org.bitcoinj.core.Address)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.EditAddressBookEntryFragment.edit(android.support.v4.app.FragmentManager,org.bitcoinj.core.Address,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.EditAddressBookEntryFragment.edit(android.support.v4.app.FragmentManager,org.bitcoinj.core.Address,java.lang.String)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.EditAddressBookEntryFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.EditAddressBookEntryFragment.onAttach(android.content.Context)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.EditAddressBookEntryFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.EditAddressBookEntryFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.EncryptKeysDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.EncryptKeysDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.EncryptKeysDialogFragment.de.schildbach.wallet.ui.EncryptKeysDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.EncryptKeysDialogFragment.de.schildbach.wallet.ui.EncryptKeysDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onAttach(android.content.Context)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onCreate(android.os.Bundle)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onDestroy()": {
            "qualifiedName": "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onDestroy()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onDismiss(android.content.DialogInterface)": {
            "qualifiedName": "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onDismiss(android.content.DialogInterface)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onResume()": {
            "qualifiedName": "de.schildbach.wallet.ui.EncryptKeysDialogFragment.onResume()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.EncryptKeysDialogFragment.show(android.support.v4.app.FragmentManager)": {
            "qualifiedName": "de.schildbach.wallet.ui.EncryptKeysDialogFragment.show(android.support.v4.app.FragmentManager)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ExchangeRatesActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesActivity",
        "methods": {
          "de.schildbach.wallet.ui.ExchangeRatesActivity.de.schildbach.wallet.ui.ExchangeRatesActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesActivity.de.schildbach.wallet.ui.ExchangeRatesActivity()",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ExchangeRatesAdapter": {
        "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter",
        "methods": {
          "de.schildbach.wallet.ui.ExchangeRatesAdapter.buildListItems(android.database.Cursor,org.bitcoinj.core.Coin,de.schildbach.wallet.service.BlockchainState,java.lang.String,org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter.buildListItems(android.database.Cursor,org.bitcoinj.core.Coin,de.schildbach.wallet.service.BlockchainState,java.lang.String,org.bitcoinj.core.Coin)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesAdapter.de.schildbach.wallet.ui.ExchangeRatesAdapter(android.content.Context,de.schildbach.wallet.ui.ExchangeRatesAdapter$OnClickListener)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter.de.schildbach.wallet.ui.ExchangeRatesAdapter(android.content.Context,de.schildbach.wallet.ui.ExchangeRatesAdapter$OnClickListener)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesAdapter.onBindViewHolder(de.schildbach.wallet.ui.ExchangeRatesAdapter$ViewHolder,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter.onBindViewHolder(de.schildbach.wallet.ui.ExchangeRatesAdapter$ViewHolder,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesAdapter.onCreateViewHolder(android.view.ViewGroup,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter.onCreateViewHolder(android.view.ViewGroup,int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ExchangeRatesAdapter$ListItem": {
        "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter$ListItem",
        "methods": {
          "de.schildbach.wallet.ui.ExchangeRatesAdapter$ListItem.de.schildbach.wallet.ui.ExchangeRatesAdapter$ListItem(de.schildbach.wallet.data.ExchangeRate,org.bitcoinj.utils.Fiat,int,org.bitcoinj.utils.Fiat,boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter$ListItem.de.schildbach.wallet.ui.ExchangeRatesAdapter$ListItem(de.schildbach.wallet.data.ExchangeRate,org.bitcoinj.utils.Fiat,int,org.bitcoinj.utils.Fiat,boolean)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ExchangeRatesAdapter$OnClickListener": {
        "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter$OnClickListener",
        "methods": {
          "de.schildbach.wallet.ui.ExchangeRatesAdapter$OnClickListener.onExchangeRateMenuClick(android.view.View,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter$OnClickListener.onExchangeRateMenuClick(android.view.View,java.lang.String)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ExchangeRatesAdapter$ViewHolder": {
        "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter$ViewHolder",
        "methods": {
          "de.schildbach.wallet.ui.ExchangeRatesAdapter$ViewHolder.de.schildbach.wallet.ui.ExchangeRatesAdapter$ViewHolder(android.view.View)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesAdapter$ViewHolder.de.schildbach.wallet.ui.ExchangeRatesAdapter$ViewHolder(android.view.View)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ExchangeRatesFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment",
        "methods": {
          "de.schildbach.wallet.ui.ExchangeRatesFragment.de.schildbach.wallet.ui.ExchangeRatesFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment.de.schildbach.wallet.ui.ExchangeRatesFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment.onCreate(android.os.Bundle)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment.onDestroy()": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment.onDestroy()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment.onExchangeRateMenuClick(android.view.View,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment.onExchangeRateMenuClick(android.view.View,java.lang.String)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ExchangeRatesFragment$ExchangeRatesLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment$ExchangeRatesLiveData",
        "methods": {
          "de.schildbach.wallet.ui.ExchangeRatesFragment$ExchangeRatesLiveData.de.schildbach.wallet.ui.ExchangeRatesFragment$ExchangeRatesLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment$ExchangeRatesLiveData.de.schildbach.wallet.ui.ExchangeRatesFragment$ExchangeRatesLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment$ExchangeRatesLiveData.setQuery(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment$ExchangeRatesLiveData.setQuery(java.lang.String)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel",
        "methods": {
          "de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel.de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel.de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel(android.app.Application)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel.getBalance()": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel.getBalance()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel.getBlockchainState()": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel.getBlockchainState()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel.getExchangeRates()": {
            "qualifiedName": "de.schildbach.wallet.ui.ExchangeRatesFragment$ViewModel.getExchangeRates()",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.FancyListFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.FancyListFragment",
        "methods": {
          "de.schildbach.wallet.ui.FancyListFragment.de.schildbach.wallet.ui.FancyListFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.FancyListFragment.de.schildbach.wallet.ui.FancyListFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.FancyListFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.FancyListFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.FancyListFragment.setEmptyText(java.lang.CharSequence)": {
            "qualifiedName": "de.schildbach.wallet.ui.FancyListFragment.setEmptyText(java.lang.CharSequence)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.HelpDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.HelpDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.HelpDialogFragment.de.schildbach.wallet.ui.HelpDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.HelpDialogFragment.de.schildbach.wallet.ui.HelpDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.HelpDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.HelpDialogFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.HelpDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.HelpDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.HelpDialogFragment.page(android.support.v4.app.FragmentManager,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.HelpDialogFragment.page(android.support.v4.app.FragmentManager,int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.InputParser": {
        "qualifiedName": "de.schildbach.wallet.ui.InputParser",
        "methods": {
          "de.schildbach.wallet.ui.InputParser.de.schildbach.wallet.ui.InputParser()": {
            "qualifiedName": "de.schildbach.wallet.ui.InputParser.de.schildbach.wallet.ui.InputParser()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.InputParser.parse()": {
            "qualifiedName": "de.schildbach.wallet.ui.InputParser.parse()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.InputParser.parsePaymentRequest(byte[])": {
            "qualifiedName": "de.schildbach.wallet.ui.InputParser.parsePaymentRequest(byte[])",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.InputParser$BinaryInputParser": {
        "qualifiedName": "de.schildbach.wallet.ui.InputParser$BinaryInputParser",
        "methods": {
          "de.schildbach.wallet.ui.InputParser$BinaryInputParser.de.schildbach.wallet.ui.InputParser$BinaryInputParser(java.lang.String,byte[])": {
            "qualifiedName": "de.schildbach.wallet.ui.InputParser$BinaryInputParser.de.schildbach.wallet.ui.InputParser$BinaryInputParser(java.lang.String,byte[])",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.InputParser$BinaryInputParser.parse()": {
            "qualifiedName": "de.schildbach.wallet.ui.InputParser$BinaryInputParser.parse()",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.InputParser$StreamInputParser": {
        "qualifiedName": "de.schildbach.wallet.ui.InputParser$StreamInputParser",
        "methods": {
          "de.schildbach.wallet.ui.InputParser$StreamInputParser.de.schildbach.wallet.ui.InputParser$StreamInputParser(java.lang.String,java.io.InputStream)": {
            "qualifiedName": "de.schildbach.wallet.ui.InputParser$StreamInputParser.de.schildbach.wallet.ui.InputParser$StreamInputParser(java.lang.String,java.io.InputStream)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.InputParser$StreamInputParser.parse()": {
            "qualifiedName": "de.schildbach.wallet.ui.InputParser$StreamInputParser.parse()",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.InputParser$StringInputParser": {
        "qualifiedName": "de.schildbach.wallet.ui.InputParser$StringInputParser",
        "methods": {
          "de.schildbach.wallet.ui.InputParser$StringInputParser.de.schildbach.wallet.ui.InputParser$StringInputParser(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.InputParser$StringInputParser.de.schildbach.wallet.ui.InputParser$StringInputParser(java.lang.String)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.InputParser$StringInputParser.parse()": {
            "qualifiedName": "de.schildbach.wallet.ui.InputParser$StringInputParser.parse()",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.MaybeMaintenanceFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.MaybeMaintenanceFragment",
        "methods": {
          "de.schildbach.wallet.ui.MaybeMaintenanceFragment.add(android.support.v4.app.FragmentManager)": {
            "qualifiedName": "de.schildbach.wallet.ui.MaybeMaintenanceFragment.add(android.support.v4.app.FragmentManager)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.MaybeMaintenanceFragment.de.schildbach.wallet.ui.MaybeMaintenanceFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.MaybeMaintenanceFragment.de.schildbach.wallet.ui.MaybeMaintenanceFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.MaybeMaintenanceFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.MaybeMaintenanceFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.MaybeMaintenanceViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.MaybeMaintenanceViewModel",
        "methods": {
          "de.schildbach.wallet.ui.MaybeMaintenanceViewModel.de.schildbach.wallet.ui.MaybeMaintenanceViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.MaybeMaintenanceViewModel.de.schildbach.wallet.ui.MaybeMaintenanceViewModel(android.app.Application)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.MaybeMaintenanceViewModel.getDialogWasShown()": {
            "qualifiedName": "de.schildbach.wallet.ui.MaybeMaintenanceViewModel.getDialogWasShown()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.MaybeMaintenanceViewModel.setDialogWasShown()": {
            "qualifiedName": "de.schildbach.wallet.ui.MaybeMaintenanceViewModel.setDialogWasShown()",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.ui.MaybeMaintenanceViewModel$WalletMaintenanceRecommendedLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.MaybeMaintenanceViewModel$WalletMaintenanceRecommendedLiveData",
        "methods": {
          "de.schildbach.wallet.ui.MaybeMaintenanceViewModel$WalletMaintenanceRecommendedLiveData.de.schildbach.wallet.ui.MaybeMaintenanceViewModel$WalletMaintenanceRecommendedLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.MaybeMaintenanceViewModel$WalletMaintenanceRecommendedLiveData.de.schildbach.wallet.ui.MaybeMaintenanceViewModel$WalletMaintenanceRecommendedLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ProgressDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.ProgressDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.ProgressDialogFragment.de.schildbach.wallet.ui.ProgressDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.ProgressDialogFragment.de.schildbach.wallet.ui.ProgressDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ProgressDialogFragment.dismissProgress(android.support.v4.app.FragmentManager)": {
            "qualifiedName": "de.schildbach.wallet.ui.ProgressDialogFragment.dismissProgress(android.support.v4.app.FragmentManager)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ProgressDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.ProgressDialogFragment.onAttach(android.content.Context)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.ProgressDialogFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.ProgressDialogFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ProgressDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.ProgressDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ProgressDialogFragment.showProgress(android.support.v4.app.FragmentManager,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.ProgressDialogFragment.showProgress(android.support.v4.app.FragmentManager,java.lang.String)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ReportIssueDialogBuilder": {
        "qualifiedName": "de.schildbach.wallet.ui.ReportIssueDialogBuilder",
        "methods": {
          "de.schildbach.wallet.ui.ReportIssueDialogBuilder.de.schildbach.wallet.ui.ReportIssueDialogBuilder(android.app.Activity,int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.ReportIssueDialogBuilder.de.schildbach.wallet.ui.ReportIssueDialogBuilder(android.app.Activity,int,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ReportIssueDialogBuilder.onClick(android.content.DialogInterface,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.ReportIssueDialogBuilder.onClick(android.content.DialogInterface,int)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ReportIssueDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.ReportIssueDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.ReportIssueDialogFragment.de.schildbach.wallet.ui.ReportIssueDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.ReportIssueDialogFragment.de.schildbach.wallet.ui.ReportIssueDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ReportIssueDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.ReportIssueDialogFragment.onAttach(android.content.Context)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.ReportIssueDialogFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.ReportIssueDialogFragment.onCreate(android.os.Bundle)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.ReportIssueDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.ReportIssueDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ReportIssueDialogFragment.onDismiss(android.content.DialogInterface)": {
            "qualifiedName": "de.schildbach.wallet.ui.ReportIssueDialogFragment.onDismiss(android.content.DialogInterface)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.ReportIssueDialogFragment.show(android.support.v4.app.FragmentManager,int,int,java.lang.String,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.ReportIssueDialogFragment.show(android.support.v4.app.FragmentManager,int,int,java.lang.String,java.lang.String)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ReportIssueViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.ReportIssueViewModel",
        "methods": {
          "de.schildbach.wallet.ui.ReportIssueViewModel.de.schildbach.wallet.ui.ReportIssueViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.ReportIssueViewModel.de.schildbach.wallet.ui.ReportIssueViewModel(android.app.Application)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.RequestCoinsActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsActivity",
        "methods": {
          "de.schildbach.wallet.ui.RequestCoinsActivity.de.schildbach.wallet.ui.RequestCoinsActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsActivity.de.schildbach.wallet.ui.RequestCoinsActivity()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsActivity.onAttachedToWindow()": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsActivity.onAttachedToWindow()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsActivity.onCreateOptionsMenu(android.view.Menu)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsActivity.onCreateOptionsMenu(android.view.Menu)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsActivity.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsActivity.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.RequestCoinsFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment",
        "methods": {
          "de.schildbach.wallet.ui.RequestCoinsFragment.de.schildbach.wallet.ui.RequestCoinsFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.de.schildbach.wallet.ui.RequestCoinsFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onActivityResult(int,int,android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onActivityResult(int,int,android.content.Intent)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onDestroyView()": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onDestroyView()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onPause()": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onPause()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onPrepareOptionsMenu(android.view.Menu)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onPrepareOptionsMenu(android.view.Menu)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onResume()": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onResume()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onSaveInstanceState(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onSaveInstanceState(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsFragment.onViewCreated(android.view.View,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsFragment.onViewCreated(android.view.View,android.os.Bundle)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.RequestCoinsViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsViewModel",
        "methods": {
          "de.schildbach.wallet.ui.RequestCoinsViewModel.de.schildbach.wallet.ui.RequestCoinsViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsViewModel.de.schildbach.wallet.ui.RequestCoinsViewModel(android.app.Application)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.RequestCoinsViewModel$FreshReceiveAddressLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsViewModel$FreshReceiveAddressLiveData",
        "methods": {
          "de.schildbach.wallet.ui.RequestCoinsViewModel$FreshReceiveAddressLiveData.de.schildbach.wallet.ui.RequestCoinsViewModel$FreshReceiveAddressLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsViewModel$FreshReceiveAddressLiveData.de.schildbach.wallet.ui.RequestCoinsViewModel$FreshReceiveAddressLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.RequestCoinsViewModel$FreshReceiveAddressLiveData.setValue(org.bitcoinj.core.Address)": {
            "qualifiedName": "de.schildbach.wallet.ui.RequestCoinsViewModel$FreshReceiveAddressLiveData.setValue(org.bitcoinj.core.Address)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.SendCoinsQrActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.SendCoinsQrActivity",
        "methods": {
          "de.schildbach.wallet.ui.SendCoinsQrActivity.de.schildbach.wallet.ui.SendCoinsQrActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.SendCoinsQrActivity.de.schildbach.wallet.ui.SendCoinsQrActivity()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.SendCoinsQrActivity.onActivityResult(int,int,android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendCoinsQrActivity.onActivityResult(int,int,android.content.Intent)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.SendingAddressesFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesFragment",
        "methods": {
          "de.schildbach.wallet.ui.SendingAddressesFragment.de.schildbach.wallet.ui.SendingAddressesFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesFragment.de.schildbach.wallet.ui.SendingAddressesFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.SendingAddressesFragment.onActivityResult(int,int,android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesFragment.onActivityResult(int,int,android.content.Intent)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.SendingAddressesFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesFragment.onAttach(android.content.Context)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.SendingAddressesFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.SendingAddressesFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.SendingAddressesFragment.onListItemClick(android.widget.ListView,android.view.View,int,long)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesFragment.onListItemClick(android.widget.ListView,android.view.View,int,long)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.SendingAddressesFragment.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesFragment.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.SendingAddressesFragment.onPrepareOptionsMenu(android.view.Menu)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesFragment.onPrepareOptionsMenu(android.view.Menu)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.SendingAddressesViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesViewModel",
        "methods": {
          "de.schildbach.wallet.ui.SendingAddressesViewModel.de.schildbach.wallet.ui.SendingAddressesViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesViewModel.de.schildbach.wallet.ui.SendingAddressesViewModel(android.app.Application)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.SendingAddressesViewModel$AddressesToExcludeLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesViewModel$AddressesToExcludeLiveData",
        "methods": {
          "de.schildbach.wallet.ui.SendingAddressesViewModel$AddressesToExcludeLiveData.de.schildbach.wallet.ui.SendingAddressesViewModel$AddressesToExcludeLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesViewModel$AddressesToExcludeLiveData.de.schildbach.wallet.ui.SendingAddressesViewModel$AddressesToExcludeLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.SendingAddressesViewModel$ClipLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesViewModel$ClipLiveData",
        "methods": {
          "de.schildbach.wallet.ui.SendingAddressesViewModel$ClipLiveData.de.schildbach.wallet.ui.SendingAddressesViewModel$ClipLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesViewModel$ClipLiveData.de.schildbach.wallet.ui.SendingAddressesViewModel$ClipLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.SendingAddressesViewModel$ClipLiveData.onPrimaryClipChanged()": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesViewModel$ClipLiveData.onPrimaryClipChanged()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.SendingAddressesViewModel$ClipLiveData.setClipData(android.content.ClipData)": {
            "qualifiedName": "de.schildbach.wallet.ui.SendingAddressesViewModel$ClipLiveData.setClipData(android.content.ClipData)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.ShowPasswordCheckListener": {
        "qualifiedName": "de.schildbach.wallet.ui.ShowPasswordCheckListener",
        "methods": {
          "de.schildbach.wallet.ui.ShowPasswordCheckListener.de.schildbach.wallet.ui.ShowPasswordCheckListener(android.widget.EditText[])": {
            "qualifiedName": "de.schildbach.wallet.ui.ShowPasswordCheckListener.de.schildbach.wallet.ui.ShowPasswordCheckListener(android.widget.EditText[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.ShowPasswordCheckListener.onCheckedChanged(android.widget.CompoundButton,boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.ShowPasswordCheckListener.onCheckedChanged(android.widget.CompoundButton,boolean)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.StickToTopLinearLayoutManager": {
        "qualifiedName": "de.schildbach.wallet.ui.StickToTopLinearLayoutManager",
        "methods": {
          "de.schildbach.wallet.ui.StickToTopLinearLayoutManager.de.schildbach.wallet.ui.StickToTopLinearLayoutManager(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.StickToTopLinearLayoutManager.de.schildbach.wallet.ui.StickToTopLinearLayoutManager(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.StickToTopLinearLayoutManager.onItemsAdded(android.support.v7.widget.RecyclerView,int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.StickToTopLinearLayoutManager.onItemsAdded(android.support.v7.widget.RecyclerView,int,int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.TransactionsAdapter": {
        "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter",
        "methods": {
          "de.schildbach.wallet.ui.TransactionsAdapter.buildListItems(android.content.Context,java.util.List,de.schildbach.wallet.ui.TransactionsAdapter$WarningType,org.bitcoinj.wallet.Wallet,java.util.Map,org.bitcoinj.utils.MonetaryFormat,int,org.bitcoinj.core.Sha256Hash)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter.buildListItems(android.content.Context,java.util.List,de.schildbach.wallet.ui.TransactionsAdapter$WarningType,org.bitcoinj.wallet.Wallet,java.util.Map,org.bitcoinj.utils.MonetaryFormat,int,org.bitcoinj.core.Sha256Hash)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.TransactionsAdapter.de.schildbach.wallet.ui.TransactionsAdapter(android.content.Context,int,de.schildbach.wallet.ui.TransactionsAdapter$OnClickListener)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter.de.schildbach.wallet.ui.TransactionsAdapter(android.content.Context,int,de.schildbach.wallet.ui.TransactionsAdapter$OnClickListener)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.TransactionsAdapter.getItemViewType(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter.getItemViewType(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.TransactionsAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.TransactionsAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.TransactionsAdapter.onCreateViewHolder(android.view.ViewGroup,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter.onCreateViewHolder(android.view.ViewGroup,int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.TransactionsAdapter$ItemAnimator": {
        "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$ItemAnimator",
        "methods": {
          "de.schildbach.wallet.ui.TransactionsAdapter$ItemAnimator.canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView.ViewHolder,java.util.List)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$ItemAnimator.canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView.ViewHolder,java.util.List)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.TransactionsAdapter$ItemAnimator.de.schildbach.wallet.ui.TransactionsAdapter$ItemAnimator()": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$ItemAnimator.de.schildbach.wallet.ui.TransactionsAdapter$ItemAnimator()",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.TransactionsAdapter$ListItem": {
        "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$ListItem",
        "methods": {
          "de.schildbach.wallet.ui.TransactionsAdapter$ListItem.de.schildbach.wallet.ui.TransactionsAdapter$ListItem()": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$ListItem.de.schildbach.wallet.ui.TransactionsAdapter$ListItem()",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem": {
        "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem",
        "methods": {
          "de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem.de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem(android.content.Context,org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet,java.util.Map,org.bitcoinj.utils.MonetaryFormat,int,boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem.de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem(android.content.Context,org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet,java.util.Map,org.bitcoinj.utils.MonetaryFormat,int,boolean)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.TransactionsAdapter$ListItem$WarningItem": {
        "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$ListItem$WarningItem",
        "methods": {
          "de.schildbach.wallet.ui.TransactionsAdapter$ListItem$WarningItem.de.schildbach.wallet.ui.TransactionsAdapter$ListItem$WarningItem(de.schildbach.wallet.ui.TransactionsAdapter$WarningType)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$ListItem$WarningItem.de.schildbach.wallet.ui.TransactionsAdapter$ListItem$WarningItem(de.schildbach.wallet.ui.TransactionsAdapter$WarningType)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.TransactionsAdapter$OnClickListener": {
        "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$OnClickListener",
        "methods": {
          "de.schildbach.wallet.ui.TransactionsAdapter$OnClickListener.onTransactionClick(android.view.View,org.bitcoinj.core.Sha256Hash)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$OnClickListener.onTransactionClick(android.view.View,org.bitcoinj.core.Sha256Hash)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.TransactionsAdapter$OnClickListener.onTransactionMenuClick(android.view.View,org.bitcoinj.core.Sha256Hash)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$OnClickListener.onTransactionMenuClick(android.view.View,org.bitcoinj.core.Sha256Hash)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.TransactionsAdapter$OnClickListener.onWarningClick(android.view.View)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$OnClickListener.onWarningClick(android.view.View)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder": {
        "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder",
        "methods": {
          "de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder.bind(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder.bind(de.schildbach.wallet.ui.TransactionsAdapter$ListItem$TransactionItem)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder.de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder(android.view.View)": {
            "qualifiedName": "de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder.de.schildbach.wallet.ui.TransactionsAdapter$TransactionViewHolder(android.view.View)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletActionsFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletActionsFragment",
        "methods": {
          "de.schildbach.wallet.ui.WalletActionsFragment.de.schildbach.wallet.ui.WalletActionsFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActionsFragment.de.schildbach.wallet.ui.WalletActionsFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActionsFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActionsFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActionsFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActionsFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActionsFragment.onResume()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActionsFragment.onResume()",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletActivity",
        "methods": {
          "de.schildbach.wallet.ui.WalletActivity.de.schildbach.wallet.ui.WalletActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.de.schildbach.wallet.ui.WalletActivity()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActivity.handleBackupWallet()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.handleBackupWallet()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActivity.handleEncryptKeys()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.handleEncryptKeys()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActivity.handleRequestCoins()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.handleRequestCoins()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActivity.handleRestoreWallet()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.handleRestoreWallet()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActivity.handleScan(android.view.View)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.handleScan(android.view.View)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActivity.handleSendCoins()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.handleSendCoins()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActivity.onActivityResult(int,int,android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.onActivityResult(int,int,android.content.Intent)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletActivity.onCreateOptionsMenu(android.view.Menu)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.onCreateOptionsMenu(android.view.Menu)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActivity.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletActivity.onPrepareOptionsMenu(android.view.Menu)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletActivity.onPrepareOptionsMenu(android.view.Menu)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletAddressDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletAddressDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.WalletAddressDialogFragment.de.schildbach.wallet.ui.WalletAddressDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressDialogFragment.de.schildbach.wallet.ui.WalletAddressDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressDialogFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressDialogFragment.show(android.support.v4.app.FragmentManager,org.bitcoinj.core.Address,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressDialogFragment.show(android.support.v4.app.FragmentManager,org.bitcoinj.core.Address,java.lang.String)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletAddressFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletAddressFragment",
        "methods": {
          "de.schildbach.wallet.ui.WalletAddressFragment.de.schildbach.wallet.ui.WalletAddressFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressFragment.de.schildbach.wallet.ui.WalletAddressFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressFragment.onAttach(android.content.Context)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletAddressViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletAddressViewModel",
        "methods": {
          "de.schildbach.wallet.ui.WalletAddressViewModel.de.schildbach.wallet.ui.WalletAddressViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressViewModel.de.schildbach.wallet.ui.WalletAddressViewModel(android.app.Application)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData",
        "methods": {
          "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData.de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData.de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData$WalletListener": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData$WalletListener",
        "methods": {
          "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData$WalletListener.onCoinsReceived(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData$WalletListener.onCoinsReceived(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData$WalletListener.onCoinsSent(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData$WalletListener.onCoinsSent(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData$WalletListener.onReorganize(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData$WalletListener.onReorganize(org.bitcoinj.wallet.Wallet)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData$WalletListener.onWalletChanged(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressViewModel$CurrentAddressLiveData$WalletListener.onWalletChanged(org.bitcoinj.wallet.Wallet)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletAddressesAdapter": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter",
        "methods": {
          "de.schildbach.wallet.ui.WalletAddressesAdapter.de.schildbach.wallet.ui.WalletAddressesAdapter(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.de.schildbach.wallet.ui.WalletAddressesAdapter(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.getCount()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.getCount()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.getItem(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.getItem(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.getItemId(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.getItemId(int)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.getItemViewType(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.getItemViewType(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.getView(int,android.view.View,android.view.ViewGroup)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.getView(int,android.view.View,android.view.ViewGroup)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.getViewTypeCount()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.getViewTypeCount()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.hasStableIds()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.hasStableIds()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.replaceDerivedKeys(java.util.Collection)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.replaceDerivedKeys(java.util.Collection)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.replaceRandomKeys(java.util.Collection)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.replaceRandomKeys(java.util.Collection)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.setAddressBook(java.util.Map)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.setAddressBook(java.util.Map)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesAdapter.setWallet(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesAdapter.setWallet(org.bitcoinj.wallet.Wallet)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletAddressesFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesFragment",
        "methods": {
          "de.schildbach.wallet.ui.WalletAddressesFragment.de.schildbach.wallet.ui.WalletAddressesFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesFragment.de.schildbach.wallet.ui.WalletAddressesFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesFragment.onAttach(android.content.Context)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesFragment.onListItemClick(android.widget.ListView,android.view.View,int,long)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesFragment.onListItemClick(android.widget.ListView,android.view.View,int,long)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesFragment.onViewCreated(android.view.View,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesFragment.onViewCreated(android.view.View,android.os.Bundle)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletAddressesViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesViewModel",
        "methods": {
          "de.schildbach.wallet.ui.WalletAddressesViewModel.de.schildbach.wallet.ui.WalletAddressesViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesViewModel.de.schildbach.wallet.ui.WalletAddressesViewModel(android.app.Application)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletAddressesViewModel$ImportedKeysLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesViewModel$ImportedKeysLiveData",
        "methods": {
          "de.schildbach.wallet.ui.WalletAddressesViewModel$ImportedKeysLiveData.de.schildbach.wallet.ui.WalletAddressesViewModel$ImportedKeysLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesViewModel$ImportedKeysLiveData.de.schildbach.wallet.ui.WalletAddressesViewModel$ImportedKeysLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletAddressesViewModel$ImportedKeysLiveData.onKeysAdded(java.util.List)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesViewModel$ImportedKeysLiveData.onKeysAdded(java.util.List)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletAddressesViewModel$IssuedReceiveKeysLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesViewModel$IssuedReceiveKeysLiveData",
        "methods": {
          "de.schildbach.wallet.ui.WalletAddressesViewModel$IssuedReceiveKeysLiveData.de.schildbach.wallet.ui.WalletAddressesViewModel$IssuedReceiveKeysLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesViewModel$IssuedReceiveKeysLiveData.de.schildbach.wallet.ui.WalletAddressesViewModel$IssuedReceiveKeysLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.WalletAddressesViewModel$IssuedReceiveKeysLiveData.onKeysAdded(java.util.List)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletAddressesViewModel$IssuedReceiveKeysLiveData.onKeysAdded(java.util.List)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletBalanceFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment",
        "methods": {
          "de.schildbach.wallet.ui.WalletBalanceFragment.de.schildbach.wallet.ui.WalletBalanceFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment.de.schildbach.wallet.ui.WalletBalanceFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletBalanceFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletBalanceFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletBalanceFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletBalanceFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletBalanceFragment.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletBalanceFragment.onPrepareOptionsMenu(android.view.Menu)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment.onPrepareOptionsMenu(android.view.Menu)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletBalanceFragment.onViewCreated(android.view.View,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment.onViewCreated(android.view.View,android.os.Bundle)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel",
        "methods": {
          "de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel.de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel.de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel(android.app.Application)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel.getBalance()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel.getBalance()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel.getBlockchainState()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel.getBlockchainState()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel.getExchangeRate()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletBalanceFragment$ViewModel.getExchangeRate()",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletDisclaimerFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment",
        "methods": {
          "de.schildbach.wallet.ui.WalletDisclaimerFragment.de.schildbach.wallet.ui.WalletDisclaimerFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment.de.schildbach.wallet.ui.WalletDisclaimerFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletDisclaimerFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletDisclaimerFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletDisclaimerFragment$DisclaimerEnabledLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment$DisclaimerEnabledLiveData",
        "methods": {
          "de.schildbach.wallet.ui.WalletDisclaimerFragment$DisclaimerEnabledLiveData.de.schildbach.wallet.ui.WalletDisclaimerFragment$DisclaimerEnabledLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment$DisclaimerEnabledLiveData.de.schildbach.wallet.ui.WalletDisclaimerFragment$DisclaimerEnabledLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletDisclaimerFragment$DisclaimerEnabledLiveData.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment$DisclaimerEnabledLiveData.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletDisclaimerFragment$ViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment$ViewModel",
        "methods": {
          "de.schildbach.wallet.ui.WalletDisclaimerFragment$ViewModel.de.schildbach.wallet.ui.WalletDisclaimerFragment$ViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment$ViewModel.de.schildbach.wallet.ui.WalletDisclaimerFragment$ViewModel(android.app.Application)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletDisclaimerFragment$ViewModel.getBlockchainState()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment$ViewModel.getBlockchainState()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletDisclaimerFragment$ViewModel.getDisclaimerEnabled()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletDisclaimerFragment$ViewModel.getDisclaimerEnabled()",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletTransactionsFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment",
        "methods": {
          "de.schildbach.wallet.ui.WalletTransactionsFragment.de.schildbach.wallet.ui.WalletTransactionsFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.de.schildbach.wallet.ui.WalletTransactionsFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsFragment.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsFragment.onPrepareOptionsMenu(android.view.Menu)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.onPrepareOptionsMenu(android.view.Menu)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsFragment.onResume()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.onResume()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsFragment.onTransactionClick(android.view.View,org.bitcoinj.core.Sha256Hash)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.onTransactionClick(android.view.View,org.bitcoinj.core.Sha256Hash)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsFragment.onTransactionMenuClick(android.view.View,org.bitcoinj.core.Sha256Hash)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.onTransactionMenuClick(android.view.View,org.bitcoinj.core.Sha256Hash)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsFragment.onWarningClick(android.view.View)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsFragment.onWarningClick(android.view.View)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletTransactionsViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel",
        "methods": {
          "de.schildbach.wallet.ui.WalletTransactionsViewModel.de.schildbach.wallet.ui.WalletTransactionsViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel.de.schildbach.wallet.ui.WalletTransactionsViewModel(android.app.Application)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsViewModel.getSelectedTransaction()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel.getSelectedTransaction()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsViewModel.setDirection(de.schildbach.wallet.ui.WalletTransactionsViewModel$Direction)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel.setDirection(de.schildbach.wallet.ui.WalletTransactionsViewModel$Direction)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsViewModel.setSelectedTransaction(org.bitcoinj.core.Sha256Hash)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel.setSelectedTransaction(org.bitcoinj.core.Sha256Hash)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsViewModel.setWarning(de.schildbach.wallet.ui.TransactionsAdapter$WarningType)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel.setWarning(de.schildbach.wallet.ui.TransactionsAdapter$WarningType)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsConfidenceLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsConfidenceLiveData",
        "methods": {
          "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsConfidenceLiveData.de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsConfidenceLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsConfidenceLiveData.de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsConfidenceLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsConfidenceLiveData.onTransactionConfidenceChanged(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsConfidenceLiveData.onTransactionConfidenceChanged(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData",
        "methods": {
          "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData.de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData.de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData$WalletListener": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData$WalletListener",
        "methods": {
          "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData$WalletListener.onCoinsReceived(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData$WalletListener.onCoinsReceived(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData$WalletListener.onCoinsSent(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData$WalletListener.onCoinsSent(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction,org.bitcoinj.core.Coin,org.bitcoinj.core.Coin)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData$WalletListener.onReorganize(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData$WalletListener.onReorganize(org.bitcoinj.wallet.Wallet)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData$WalletListener.onWalletChanged(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletTransactionsViewModel$TransactionsLiveData$WalletListener.onWalletChanged(org.bitcoinj.wallet.Wallet)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletViewModel",
        "methods": {
          "de.schildbach.wallet.ui.WalletViewModel.addressLoadingFinished()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletViewModel.addressLoadingFinished()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletViewModel.animateWhenLoadingFinished()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletViewModel.animateWhenLoadingFinished()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletViewModel.animationFinished()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletViewModel.animationFinished()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletViewModel.balanceLoadingFinished()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletViewModel.balanceLoadingFinished()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.WalletViewModel.de.schildbach.wallet.ui.WalletViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletViewModel.de.schildbach.wallet.ui.WalletViewModel(android.app.Application)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletViewModel.onFirstPreDraw()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletViewModel.onFirstPreDraw()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.WalletViewModel.transactionsLoadingFinished()": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletViewModel.transactionsLoadingFinished()",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.WalletViewModel$WalletEncryptedLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.WalletViewModel$WalletEncryptedLiveData",
        "methods": {
          "de.schildbach.wallet.ui.WalletViewModel$WalletEncryptedLiveData.de.schildbach.wallet.ui.WalletViewModel$WalletEncryptedLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.WalletViewModel$WalletEncryptedLiveData.de.schildbach.wallet.ui.WalletViewModel$WalletEncryptedLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Service Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.ui.backup": {
    "qualifiedName": "de.schildbach.wallet.ui.backup",
    "classes": {
      "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.de.schildbach.wallet.ui.backup.BackupWalletDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.de.schildbach.wallet.ui.backup.BackupWalletDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.onActivityResult(int,int,android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.onActivityResult(int,int,android.content.Intent)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.onDismiss(android.content.DialogInterface)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.onDismiss(android.content.DialogInterface)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.show(android.support.v4.app.FragmentManager)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment.show(android.support.v4.app.FragmentManager)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$ErrorDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$ErrorDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$ErrorDialogFragment.de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$ErrorDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$ErrorDialogFragment.de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$ErrorDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$ErrorDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$ErrorDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$ErrorDialogFragment.showDialog(android.support.v4.app.FragmentManager,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$ErrorDialogFragment.showDialog(android.support.v4.app.FragmentManager,java.lang.String)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$SuccessDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$SuccessDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$SuccessDialogFragment.de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$SuccessDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$SuccessDialogFragment.de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$SuccessDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$SuccessDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$SuccessDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$SuccessDialogFragment.showDialog(android.support.v4.app.FragmentManager,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletDialogFragment$SuccessDialogFragment.showDialog(android.support.v4.app.FragmentManager,java.lang.String)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.BackupWalletViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletViewModel",
        "methods": {
          "de.schildbach.wallet.ui.backup.BackupWalletViewModel.de.schildbach.wallet.ui.backup.BackupWalletViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.BackupWalletViewModel.de.schildbach.wallet.ui.backup.BackupWalletViewModel(android.app.Application)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.FileAdapter": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.FileAdapter",
        "methods": {
          "de.schildbach.wallet.ui.backup.FileAdapter.de.schildbach.wallet.ui.backup.FileAdapter(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.FileAdapter.de.schildbach.wallet.ui.backup.FileAdapter(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.FileAdapter.getView(int,android.view.View,android.view.ViewGroup)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.FileAdapter.getView(int,android.view.View,android.view.ViewGroup)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.FileAdapter.setFiles(java.util.List)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.FileAdapter.setFiles(java.util.List)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener",
        "methods": {
          "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.afterTextChanged(android.text.Editable)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.afterTextChanged(android.text.Editable)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.beforeTextChanged(java.lang.CharSequence,int,int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.beforeTextChanged(java.lang.CharSequence,int,int,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener(android.widget.TextView,android.app.AlertDialog)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener(android.widget.TextView,android.app.AlertDialog)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.handle()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.handle()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.onItemSelected(android.widget.AdapterView,android.view.View,int,long)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.onItemSelected(android.widget.AdapterView,android.view.View,int,long)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.onNothingSelected(android.widget.AdapterView)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.onNothingSelected(android.widget.AdapterView)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.onTextChanged(java.lang.CharSequence,int,int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.ImportDialogButtonEnablerListener.onTextChanged(java.lang.CharSequence,int,int,int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.onRequestPermissionsResult(int,java.lang.String[],int[])": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.onRequestPermissionsResult(int,java.lang.String[],int[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.onResume()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.onResume()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.show(android.support.v4.app.FragmentManager)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment.show(android.support.v4.app.FragmentManager)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$FailureDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$FailureDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$FailureDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$FailureDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$FailureDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$FailureDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$FailureDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$FailureDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$FailureDialogFragment.showDialog(android.support.v4.app.FragmentManager,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$FailureDialogFragment.showDialog(android.support.v4.app.FragmentManager,java.lang.String)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$PermissionDeniedDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$PermissionDeniedDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$PermissionDeniedDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$PermissionDeniedDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$PermissionDeniedDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$PermissionDeniedDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$PermissionDeniedDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$PermissionDeniedDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$PermissionDeniedDialogFragment.showDialog(android.support.v4.app.FragmentManager)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$PermissionDeniedDialogFragment.showDialog(android.support.v4.app.FragmentManager)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment.showDialog(android.support.v4.app.FragmentManager,boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletDialogFragment$SuccessDialogFragment.showDialog(android.support.v4.app.FragmentManager,boolean)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity",
        "methods": {
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity.de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity.de.schildbach.wallet.ui.backup.RestoreWalletFromExternalActivity()",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment.onAttach(android.content.Context)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment.onCreate(android.os.Bundle)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment.show(android.support.v4.app.FragmentManager,android.net.Uri)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment.show(android.support.v4.app.FragmentManager,android.net.Uri)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment.showDialog(android.support.v4.app.FragmentManager,java.lang.String,android.net.Uri)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$FailureDialogFragment.showDialog(android.support.v4.app.FragmentManager,java.lang.String,android.net.Uri)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment.de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment.showDialog(android.support.v4.app.FragmentManager,boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletFromExternalDialogFragment$SuccessDialogFragment.showDialog(android.support.v4.app.FragmentManager,boolean)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.backup.RestoreWalletViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletViewModel",
        "methods": {
          "de.schildbach.wallet.ui.backup.RestoreWalletViewModel.de.schildbach.wallet.ui.backup.RestoreWalletViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.backup.RestoreWalletViewModel.de.schildbach.wallet.ui.backup.RestoreWalletViewModel(android.app.Application)",
            "layer": "Service Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.ui.monitor": {
    "qualifiedName": "de.schildbach.wallet.ui.monitor",
    "classes": {
      "de.schildbach.wallet.ui.monitor.BlockListAdapter": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter",
        "methods": {
          "de.schildbach.wallet.ui.monitor.BlockListAdapter.buildListItems(android.content.Context,java.util.List,java.util.Date,org.bitcoinj.utils.MonetaryFormat,java.util.Set,org.bitcoinj.wallet.Wallet,java.util.Map)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter.buildListItems(android.content.Context,java.util.List,java.util.Date,org.bitcoinj.utils.MonetaryFormat,java.util.Set,org.bitcoinj.wallet.Wallet,java.util.Map)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListAdapter.de.schildbach.wallet.ui.monitor.BlockListAdapter(android.content.Context,de.schildbach.wallet.ui.monitor.BlockListAdapter$OnClickListener)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter.de.schildbach.wallet.ui.monitor.BlockListAdapter(android.content.Context,de.schildbach.wallet.ui.monitor.BlockListAdapter$OnClickListener)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListAdapter.onBindViewHolder(de.schildbach.wallet.ui.monitor.BlockListAdapter$ViewHolder,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter.onBindViewHolder(de.schildbach.wallet.ui.monitor.BlockListAdapter$ViewHolder,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListAdapter.onCreateViewHolder(android.view.ViewGroup,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter.onCreateViewHolder(android.view.ViewGroup,int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem",
        "methods": {
          "de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem.de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem(android.content.Context,org.bitcoinj.core.StoredBlock,java.util.Date,org.bitcoinj.utils.MonetaryFormat,java.util.Set,org.bitcoinj.wallet.Wallet,java.util.Map)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem.de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem(android.content.Context,org.bitcoinj.core.StoredBlock,java.util.Date,org.bitcoinj.utils.MonetaryFormat,java.util.Set,org.bitcoinj.wallet.Wallet,java.util.Map)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem$ListTransaction": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem$ListTransaction",
        "methods": {
          "de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem$ListTransaction.de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem$ListTransaction(android.content.Context,org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet,java.util.Map)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem$ListTransaction.de.schildbach.wallet.ui.monitor.BlockListAdapter$ListItem$ListTransaction(android.content.Context,org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet,java.util.Map)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.BlockListAdapter$OnClickListener": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter$OnClickListener",
        "methods": {
          "de.schildbach.wallet.ui.monitor.BlockListAdapter$OnClickListener.onBlockMenuClick(android.view.View,org.bitcoinj.core.Sha256Hash)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListAdapter$OnClickListener.onBlockMenuClick(android.view.View,org.bitcoinj.core.Sha256Hash)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.BlockListFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment",
        "methods": {
          "de.schildbach.wallet.ui.monitor.BlockListFragment.de.schildbach.wallet.ui.monitor.BlockListFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment.de.schildbach.wallet.ui.monitor.BlockListFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListFragment.onBlockMenuClick(android.view.View,org.bitcoinj.core.Sha256Hash)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment.onBlockMenuClick(android.view.View,org.bitcoinj.core.Sha256Hash)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.BlockListFragment$BlocksLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment$BlocksLiveData",
        "methods": {
          "de.schildbach.wallet.ui.monitor.BlockListFragment$BlocksLiveData.onServiceConnected(android.content.ComponentName,android.os.IBinder)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment$BlocksLiveData.onServiceConnected(android.content.ComponentName,android.os.IBinder)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListFragment$BlocksLiveData.onServiceDisconnected(android.content.ComponentName)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment$BlocksLiveData.onServiceDisconnected(android.content.ComponentName)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel",
        "methods": {
          "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel.de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel.de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel(android.app.Application)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel.getBlocks()": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel.getBlocks()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel.getTime()": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel.getTime()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel.getTransactions()": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel.getTransactions()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel.getWallet()": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.BlockListFragment$ViewModel.getWallet()",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity",
        "methods": {
          "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity.de.schildbach.wallet.ui.monitor.NetworkMonitorActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity.de.schildbach.wallet.ui.monitor.NetworkMonitorActivity()",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter",
        "methods": {
          "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter.de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter(android.support.v4.app.FragmentManager)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter.de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter(android.support.v4.app.FragmentManager)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter.getCount()": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter.getCount()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter.getItem(int)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.NetworkMonitorActivity$PagerAdapter.getItem(int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.PeerListAdapter": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListAdapter",
        "methods": {
          "de.schildbach.wallet.ui.monitor.PeerListAdapter.buildListItems(android.content.Context,java.util.List,java.util.Map)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListAdapter.buildListItems(android.content.Context,java.util.List,java.util.Map)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.PeerListAdapter.de.schildbach.wallet.ui.monitor.PeerListAdapter(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListAdapter.de.schildbach.wallet.ui.monitor.PeerListAdapter(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.PeerListAdapter.onBindViewHolder(de.schildbach.wallet.ui.monitor.PeerListAdapter$ViewHolder,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListAdapter.onBindViewHolder(de.schildbach.wallet.ui.monitor.PeerListAdapter$ViewHolder,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.PeerListAdapter.onCreateViewHolder(android.view.ViewGroup,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListAdapter.onCreateViewHolder(android.view.ViewGroup,int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.PeerListAdapter$ListItem": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListAdapter$ListItem",
        "methods": {
          "de.schildbach.wallet.ui.monitor.PeerListAdapter$ListItem.de.schildbach.wallet.ui.monitor.PeerListAdapter$ListItem(android.content.Context,org.bitcoinj.core.Peer,java.util.Map)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListAdapter$ListItem.de.schildbach.wallet.ui.monitor.PeerListAdapter$ListItem(android.content.Context,org.bitcoinj.core.Peer,java.util.Map)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.PeerListFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment",
        "methods": {
          "de.schildbach.wallet.ui.monitor.PeerListFragment.de.schildbach.wallet.ui.monitor.PeerListFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment.de.schildbach.wallet.ui.monitor.PeerListFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.PeerListFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment.onAttach(android.content.Context)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.monitor.PeerListFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment.onCreate(android.os.Bundle)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.monitor.PeerListFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.PeerListFragment$HostnamesLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment$HostnamesLiveData",
        "methods": {
          "de.schildbach.wallet.ui.monitor.PeerListFragment$HostnamesLiveData.de.schildbach.wallet.ui.monitor.PeerListFragment$HostnamesLiveData(de.schildbach.wallet.WalletApplication)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment$HostnamesLiveData.de.schildbach.wallet.ui.monitor.PeerListFragment$HostnamesLiveData(de.schildbach.wallet.WalletApplication)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.monitor.PeerListFragment$HostnamesLiveData.reverseLookup(java.net.InetAddress)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment$HostnamesLiveData.reverseLookup(java.net.InetAddress)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.PeerListFragment$PeersLiveData": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment$PeersLiveData",
        "methods": {
          "de.schildbach.wallet.ui.monitor.PeerListFragment$PeersLiveData.onServiceConnected(android.content.ComponentName,android.os.IBinder)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment$PeersLiveData.onServiceConnected(android.content.ComponentName,android.os.IBinder)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.monitor.PeerListFragment$PeersLiveData.onServiceDisconnected(android.content.ComponentName)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment$PeersLiveData.onServiceDisconnected(android.content.ComponentName)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.monitor.PeerListFragment$ViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment$ViewModel",
        "methods": {
          "de.schildbach.wallet.ui.monitor.PeerListFragment$ViewModel.de.schildbach.wallet.ui.monitor.PeerListFragment$ViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment$ViewModel.de.schildbach.wallet.ui.monitor.PeerListFragment$ViewModel(android.app.Application)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.monitor.PeerListFragment$ViewModel.getHostnames()": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment$ViewModel.getHostnames()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.monitor.PeerListFragment$ViewModel.getPeers()": {
            "qualifiedName": "de.schildbach.wallet.ui.monitor.PeerListFragment$ViewModel.getPeers()",
            "layer": "Domain Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.ui.preference": {
    "qualifiedName": "de.schildbach.wallet.ui.preference",
    "classes": {
      "de.schildbach.wallet.ui.preference.AboutFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.preference.AboutFragment",
        "methods": {
          "de.schildbach.wallet.ui.preference.AboutFragment.de.schildbach.wallet.ui.preference.AboutFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.AboutFragment.de.schildbach.wallet.ui.preference.AboutFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.AboutFragment.onAttach(android.app.Activity)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.AboutFragment.onAttach(android.app.Activity)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.AboutFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.AboutFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.preference.DiagnosticsFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.preference.DiagnosticsFragment",
        "methods": {
          "de.schildbach.wallet.ui.preference.DiagnosticsFragment.de.schildbach.wallet.ui.preference.DiagnosticsFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.DiagnosticsFragment.de.schildbach.wallet.ui.preference.DiagnosticsFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.DiagnosticsFragment.onAttach(android.app.Activity)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.DiagnosticsFragment.onAttach(android.app.Activity)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.DiagnosticsFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.DiagnosticsFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.DiagnosticsFragment.onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.DiagnosticsFragment.onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment",
        "methods": {
          "de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment.de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment.de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment.onAttach(android.app.Activity)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment.onAttach(android.app.Activity)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment.show(android.app.FragmentManager,java.lang.CharSequence)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.ExtendedPublicKeyFragment.show(android.app.FragmentManager,java.lang.CharSequence)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.preference.PreferenceActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.preference.PreferenceActivity",
        "methods": {
          "de.schildbach.wallet.ui.preference.PreferenceActivity.de.schildbach.wallet.ui.preference.PreferenceActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.PreferenceActivity.de.schildbach.wallet.ui.preference.PreferenceActivity()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.PreferenceActivity.onBuildHeaders(java.util.List)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.PreferenceActivity.onBuildHeaders(java.util.List)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.PreferenceActivity.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.PreferenceActivity.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.preference.ResolveDnsTask": {
        "qualifiedName": "de.schildbach.wallet.ui.preference.ResolveDnsTask",
        "methods": {
          "de.schildbach.wallet.ui.preference.ResolveDnsTask.de.schildbach.wallet.ui.preference.ResolveDnsTask(android.os.Handler)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.ResolveDnsTask.de.schildbach.wallet.ui.preference.ResolveDnsTask(android.os.Handler)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.preference.ResolveDnsTask.resolve(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.ResolveDnsTask.resolve(java.lang.String)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.preference.SettingsFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.preference.SettingsFragment",
        "methods": {
          "de.schildbach.wallet.ui.preference.SettingsFragment.de.schildbach.wallet.ui.preference.SettingsFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.SettingsFragment.de.schildbach.wallet.ui.preference.SettingsFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.SettingsFragment.onAttach(android.app.Activity)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.SettingsFragment.onAttach(android.app.Activity)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.SettingsFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.SettingsFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.SettingsFragment.onDestroy()": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.SettingsFragment.onDestroy()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.preference.SettingsFragment.onPreferenceChange(android.preference.Preference,java.lang.Object)": {
            "qualifiedName": "de.schildbach.wallet.ui.preference.SettingsFragment.onPreferenceChange(android.preference.Preference,java.lang.Object)",
            "layer": "Service Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.ui.scan": {
    "qualifiedName": "de.schildbach.wallet.ui.scan",
    "classes": {
      "de.schildbach.wallet.ui.scan.CameraManager": {
        "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager",
        "methods": {
          "de.schildbach.wallet.ui.scan.CameraManager.buildLuminanceSource(byte[])": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager.buildLuminanceSource(byte[])",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.scan.CameraManager.close()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager.close()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.scan.CameraManager.de.schildbach.wallet.ui.scan.CameraManager()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager.de.schildbach.wallet.ui.scan.CameraManager()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.CameraManager.getFacing()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager.getFacing()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.scan.CameraManager.getFrame()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager.getFrame()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.scan.CameraManager.getFramePreview()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager.getFramePreview()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.CameraManager.getOrientation()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager.getOrientation()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.ui.scan.CameraManager.open(android.view.TextureView,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager.open(android.view.TextureView,int)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.scan.CameraManager.requestPreviewFrame(android.hardware.Camera.PreviewCallback)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager.requestPreviewFrame(android.hardware.Camera.PreviewCallback)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.scan.CameraManager.setTorch(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.CameraManager.setTorch(boolean)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.scan.ScanActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity",
        "methods": {
          "de.schildbach.wallet.ui.scan.ScanActivity.de.schildbach.wallet.ui.scan.ScanActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.de.schildbach.wallet.ui.scan.ScanActivity()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.handleResult(com.google.zxing.Result)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.handleResult(com.google.zxing.Result)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.onAttachedToWindow()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.onAttachedToWindow()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.onBackPressed()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.onBackPressed()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.onKeyDown(int,android.view.KeyEvent)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.onKeyDown(int,android.view.KeyEvent)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.onRequestPermissionsResult(int,java.lang.String[],int[])": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.onRequestPermissionsResult(int,java.lang.String[],int[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.onSurfaceTextureUpdated(android.graphics.SurfaceTexture)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.onSurfaceTextureUpdated(android.graphics.SurfaceTexture)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.startForResult(android.app.Activity,android.view.View,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.startForResult(android.app.Activity,android.view.View,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.startForResult(android.app.Activity,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.startForResult(android.app.Activity,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity.startForResult(android.support.v4.app.Fragment,android.app.Activity,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity.startForResult(android.support.v4.app.Fragment,android.app.Activity,int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable": {
        "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable",
        "methods": {
          "de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable.de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable(android.hardware.Camera)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable.de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable(android.hardware.Camera)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable.run()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity$AutoFocusRunnable.run()",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment.de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment.de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment.onCancel(android.content.DialogInterface)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment.onCancel(android.content.DialogInterface)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment.show(android.support.v4.app.FragmentManager,int,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanActivity$WarnDialogFragment.show(android.support.v4.app.FragmentManager,int,java.lang.String)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.scan.ScanViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.scan.ScanViewModel",
        "methods": {
          "de.schildbach.wallet.ui.scan.ScanViewModel.de.schildbach.wallet.ui.scan.ScanViewModel()": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScanViewModel.de.schildbach.wallet.ui.scan.ScanViewModel()",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.scan.ScannerView": {
        "qualifiedName": "de.schildbach.wallet.ui.scan.ScannerView",
        "methods": {
          "de.schildbach.wallet.ui.scan.ScannerView.addDot(com.google.zxing.ResultPoint)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScannerView.addDot(com.google.zxing.ResultPoint)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScannerView.de.schildbach.wallet.ui.scan.ScannerView(android.content.Context,android.util.AttributeSet)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScannerView.de.schildbach.wallet.ui.scan.ScannerView(android.content.Context,android.util.AttributeSet)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScannerView.onDraw(android.graphics.Canvas)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScannerView.onDraw(android.graphics.Canvas)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScannerView.setFraming(android.graphics.Rect,android.graphics.RectF,int,int,boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScannerView.setFraming(android.graphics.Rect,android.graphics.RectF,int,int,boolean)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.scan.ScannerView.setIsResult(boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.scan.ScannerView.setIsResult(boolean)",
            "layer": "Presentation Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.ui.send": {
    "qualifiedName": "de.schildbach.wallet.ui.send",
    "classes": {
      "de.schildbach.wallet.ui.send.DecodePrivateKeyTask": {
        "qualifiedName": "de.schildbach.wallet.ui.send.DecodePrivateKeyTask",
        "methods": {
          "de.schildbach.wallet.ui.send.DecodePrivateKeyTask.de.schildbach.wallet.ui.send.DecodePrivateKeyTask(android.os.Handler)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.DecodePrivateKeyTask.de.schildbach.wallet.ui.send.DecodePrivateKeyTask(android.os.Handler)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.DecodePrivateKeyTask.decodePrivateKey(org.bitcoinj.crypto.BIP38PrivateKey,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.DecodePrivateKeyTask.decodePrivateKey(org.bitcoinj.crypto.BIP38PrivateKey,java.lang.String)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.DeriveKeyTask": {
        "qualifiedName": "de.schildbach.wallet.ui.send.DeriveKeyTask",
        "methods": {
          "de.schildbach.wallet.ui.send.DeriveKeyTask.de.schildbach.wallet.ui.send.DeriveKeyTask(android.os.Handler,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.DeriveKeyTask.de.schildbach.wallet.ui.send.DeriveKeyTask(android.os.Handler,int)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.send.DeriveKeyTask.deriveKey(org.bitcoinj.wallet.Wallet,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.DeriveKeyTask.deriveKey(org.bitcoinj.wallet.Wallet,java.lang.String)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.MaintenanceDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.send.MaintenanceDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.de.schildbach.wallet.ui.send.MaintenanceDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.de.schildbach.wallet.ui.send.MaintenanceDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onAttach(android.content.Context)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onCreate(android.os.Bundle)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onDestroy()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onDestroy()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onDismiss(android.content.DialogInterface)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onDismiss(android.content.DialogInterface)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onResume()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.onResume()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.show(android.support.v4.app.FragmentManager)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.MaintenanceDialogFragment.show(android.support.v4.app.FragmentManager)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment",
        "methods": {
          "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.de.schildbach.wallet.ui.send.RaiseFeeDialogFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.de.schildbach.wallet.ui.send.RaiseFeeDialogFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.feeCanLikelyBeRaised(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.feeCanLikelyBeRaised(org.bitcoinj.wallet.Wallet,org.bitcoinj.core.Transaction)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.onCreate(android.os.Bundle)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.onCreateDialog(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.onCreateDialog(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.onDestroy()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.onDestroy()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.onDismiss(android.content.DialogInterface)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.onDismiss(android.content.DialogInterface)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.show(android.support.v4.app.FragmentManager,org.bitcoinj.core.Transaction)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment.show(android.support.v4.app.FragmentManager,org.bitcoinj.core.Transaction)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment$ViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment$ViewModel",
        "methods": {
          "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment$ViewModel.de.schildbach.wallet.ui.send.RaiseFeeDialogFragment$ViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment$ViewModel.de.schildbach.wallet.ui.send.RaiseFeeDialogFragment$ViewModel(android.app.Application)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment$ViewModel.getDynamicFees()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RaiseFeeDialogFragment$ViewModel.getDynamicFees()",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RequestPaymentRequestTask": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask",
        "methods": {
          "de.schildbach.wallet.ui.send.RequestPaymentRequestTask.de.schildbach.wallet.ui.send.RequestPaymentRequestTask(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask.de.schildbach.wallet.ui.send.RequestPaymentRequestTask(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.RequestPaymentRequestTask.requestPaymentRequest(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask.requestPaymentRequest(java.lang.String)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask",
        "methods": {
          "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask.de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback,android.bluetooth.BluetoothAdapter)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask.de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback,android.bluetooth.BluetoothAdapter)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask.requestPaymentRequest(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$BluetoothRequestTask.requestPaymentRequest(java.lang.String)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask",
        "methods": {
          "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask.de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask.de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask(android.os.Handler,de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback,java.lang.String)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask.requestPaymentRequest(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$HttpRequestTask.requestPaymentRequest(java.lang.String)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback",
        "methods": {
          "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback.onFail(int,java.lang.Object[])": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback.onFail(int,java.lang.Object[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback.onPaymentIntent(de.schildbach.wallet.data.PaymentIntent)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestPaymentRequestTask$ResultCallback.onPaymentIntent(de.schildbach.wallet.data.PaymentIntent)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RequestWalletBalanceTask": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask",
        "methods": {
          "de.schildbach.wallet.ui.send.RequestWalletBalanceTask.de.schildbach.wallet.ui.send.RequestWalletBalanceTask(android.os.Handler,de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask.de.schildbach.wallet.ui.send.RequestWalletBalanceTask(android.os.Handler,de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.RequestWalletBalanceTask.requestWalletBalance(android.content.res.AssetManager,org.bitcoinj.core.Address)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask.requestWalletBalance(android.content.res.AssetManager,org.bitcoinj.core.Address)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer",
        "methods": {
          "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer.de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer.de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ElectrumServer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest",
        "methods": {
          "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest.de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest(java.lang.String,java.lang.String[])": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest.de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcRequest(java.lang.String,java.lang.String[])",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse",
        "methods": {
          "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse.de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse.de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse()",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse$Utxo": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse$Utxo",
        "methods": {
          "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse$Utxo.de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse$Utxo()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse$Utxo.de.schildbach.wallet.ui.send.RequestWalletBalanceTask$JsonRpcResponse$Utxo()",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback": {
        "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback",
        "methods": {
          "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback.onFail(int,java.lang.Object[])": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback.onFail(int,java.lang.Object[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback.onResult(java.util.Set)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.RequestWalletBalanceTask$ResultCallback.onResult(java.util.Set)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.SendCoinsActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsActivity",
        "methods": {
          "de.schildbach.wallet.ui.send.SendCoinsActivity.de.schildbach.wallet.ui.send.SendCoinsActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsActivity.de.schildbach.wallet.ui.send.SendCoinsActivity()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsActivity.onCreateOptionsMenu(android.view.Menu)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsActivity.onCreateOptionsMenu(android.view.Menu)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsActivity.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsActivity.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsActivity.start(android.content.Context,de.schildbach.wallet.data.PaymentIntent)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsActivity.start(android.content.Context,de.schildbach.wallet.data.PaymentIntent)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsActivity.start(android.content.Context,de.schildbach.wallet.data.PaymentIntent,de.schildbach.wallet.ui.send.FeeCategory,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsActivity.start(android.content.Context,de.schildbach.wallet.data.PaymentIntent,de.schildbach.wallet.ui.send.FeeCategory,int)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsActivity.startDonate(android.content.Context,org.bitcoinj.core.Coin,de.schildbach.wallet.ui.send.FeeCategory,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsActivity.startDonate(android.content.Context,org.bitcoinj.core.Coin,de.schildbach.wallet.ui.send.FeeCategory,int)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.SendCoinsFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment",
        "methods": {
          "de.schildbach.wallet.ui.send.SendCoinsFragment.de.schildbach.wallet.ui.send.SendCoinsFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.de.schildbach.wallet.ui.send.SendCoinsFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onActivityResult(int,int,android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onActivityResult(int,int,android.content.Intent)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onCreate(android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onDestroy()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onDestroy()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onDestroyView()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onDestroyView()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onDetach()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onDetach()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onPause()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onPause()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onPrepareOptionsMenu(android.view.Menu)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onPrepareOptionsMenu(android.view.Menu)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment.onResume()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment.onResume()",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener": {
        "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener",
        "methods": {
          "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener.afterTextChanged(android.text.Editable)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener.afterTextChanged(android.text.Editable)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener.beforeTextChanged(java.lang.CharSequence,int,int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener.beforeTextChanged(java.lang.CharSequence,int,int,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener.onFocusChange(android.view.View,boolean)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener.onFocusChange(android.view.View,boolean)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener.onItemClick(android.widget.AdapterView,android.view.View,int,long)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener.onItemClick(android.widget.AdapterView,android.view.View,int,long)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener.onTextChanged(java.lang.CharSequence,int,int,int)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressListener.onTextChanged(java.lang.CharSequence,int,int,int)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter": {
        "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter",
        "methods": {
          "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter.de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter.de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter.getFilter()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter.getFilter()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter.getView(int,android.view.View,android.view.ViewGroup)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsFragment$ReceivingAddressViewAdapter.getView(int,android.view.View,android.view.ViewGroup)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.SendCoinsOfflineTask": {
        "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsOfflineTask",
        "methods": {
          "de.schildbach.wallet.ui.send.SendCoinsOfflineTask.de.schildbach.wallet.ui.send.SendCoinsOfflineTask(org.bitcoinj.wallet.Wallet,android.os.Handler)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsOfflineTask.de.schildbach.wallet.ui.send.SendCoinsOfflineTask(org.bitcoinj.wallet.Wallet,android.os.Handler)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.SendCoinsOfflineTask.sendCoinsOffline(org.bitcoinj.wallet.SendRequest)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsOfflineTask.sendCoinsOffline(org.bitcoinj.wallet.SendRequest)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.SendCoinsViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsViewModel",
        "methods": {
          "de.schildbach.wallet.ui.send.SendCoinsViewModel.de.schildbach.wallet.ui.send.SendCoinsViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SendCoinsViewModel.de.schildbach.wallet.ui.send.SendCoinsViewModel(android.app.Application)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.SweepWalletActivity": {
        "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletActivity",
        "methods": {
          "de.schildbach.wallet.ui.send.SweepWalletActivity.de.schildbach.wallet.ui.send.SweepWalletActivity()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletActivity.de.schildbach.wallet.ui.send.SweepWalletActivity()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletActivity.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletActivity.onCreate(android.os.Bundle)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletActivity.start(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletActivity.start(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletActivity.start(android.content.Context,org.bitcoinj.core.VersionedChecksummedBytes)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletActivity.start(android.content.Context,org.bitcoinj.core.VersionedChecksummedBytes)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.SweepWalletFragment": {
        "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment",
        "methods": {
          "de.schildbach.wallet.ui.send.SweepWalletFragment.de.schildbach.wallet.ui.send.SweepWalletFragment()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment.de.schildbach.wallet.ui.send.SweepWalletFragment()",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletFragment.onActivityResult(int,int,android.content.Intent)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment.onActivityResult(int,int,android.content.Intent)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletFragment.onAttach(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment.onAttach(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletFragment.onCreate(android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment.onCreate(android.os.Bundle)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletFragment.onDestroy()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment.onDestroy()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.ui.send.SweepWalletFragment.onOptionsItemSelected(android.view.MenuItem)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment.onOptionsItemSelected(android.view.MenuItem)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction": {
        "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction",
        "methods": {
          "de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction.de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Sha256Hash)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction.de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction(org.bitcoinj.core.NetworkParameters,org.bitcoinj.core.Sha256Hash)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction.getHash()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment$FakeTransaction.getHash()",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.ui.send.SweepWalletFragment$ViewModel": {
        "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment$ViewModel",
        "methods": {
          "de.schildbach.wallet.ui.send.SweepWalletFragment$ViewModel.de.schildbach.wallet.ui.send.SweepWalletFragment$ViewModel(android.app.Application)": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment$ViewModel.de.schildbach.wallet.ui.send.SweepWalletFragment$ViewModel(android.app.Application)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.ui.send.SweepWalletFragment$ViewModel.getDynamicFees()": {
            "qualifiedName": "de.schildbach.wallet.ui.send.SweepWalletFragment$ViewModel.getDynamicFees()",
            "layer": "Service Layer"
          }
        }
      }
    }
  },
  "de.schildbach.wallet.util": {
    "qualifiedName": "de.schildbach.wallet.util",
    "classes": {
      "de.schildbach.wallet.util.Base43": {
        "qualifiedName": "de.schildbach.wallet.util.Base43",
        "methods": {
          "de.schildbach.wallet.util.Base43.de.schildbach.wallet.util.Base43()": {
            "qualifiedName": "de.schildbach.wallet.util.Base43.de.schildbach.wallet.util.Base43()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Base43.decode(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Base43.decode(java.lang.String)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Base43.encode(byte[])": {
            "qualifiedName": "de.schildbach.wallet.util.Base43.encode(byte[])",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.util.Base43Test": {
        "qualifiedName": "de.schildbach.wallet.util.Base43Test",
        "methods": {
          "de.schildbach.wallet.util.Base43Test.de.schildbach.wallet.util.Base43Test()": {
            "qualifiedName": "de.schildbach.wallet.util.Base43Test.de.schildbach.wallet.util.Base43Test()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Base43Test.decode()": {
            "qualifiedName": "de.schildbach.wallet.util.Base43Test.decode()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Base43Test.encode()": {
            "qualifiedName": "de.schildbach.wallet.util.Base43Test.encode()",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.util.Bluetooth": {
        "qualifiedName": "de.schildbach.wallet.util.Bluetooth",
        "methods": {
          "de.schildbach.wallet.util.Bluetooth.compressMac(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Bluetooth.compressMac(java.lang.String)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Bluetooth.de.schildbach.wallet.util.Bluetooth()": {
            "qualifiedName": "de.schildbach.wallet.util.Bluetooth.de.schildbach.wallet.util.Bluetooth()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Bluetooth.decompressMac(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Bluetooth.decompressMac(java.lang.String)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Bluetooth.getAddress(android.bluetooth.BluetoothAdapter)": {
            "qualifiedName": "de.schildbach.wallet.util.Bluetooth.getAddress(android.bluetooth.BluetoothAdapter)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Bluetooth.getBluetoothMac(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Bluetooth.getBluetoothMac(java.lang.String)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Bluetooth.getBluetoothQuery(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Bluetooth.getBluetoothQuery(java.lang.String)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Bluetooth.isBluetoothUrl(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Bluetooth.isBluetoothUrl(java.lang.String)",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.util.BluetoothTest": {
        "qualifiedName": "de.schildbach.wallet.util.BluetoothTest",
        "methods": {
          "de.schildbach.wallet.util.BluetoothTest.compressDecompressMac()": {
            "qualifiedName": "de.schildbach.wallet.util.BluetoothTest.compressDecompressMac()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.BluetoothTest.de.schildbach.wallet.util.BluetoothTest()": {
            "qualifiedName": "de.schildbach.wallet.util.BluetoothTest.de.schildbach.wallet.util.BluetoothTest()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.util.BluetoothTest.getBluetooth()": {
            "qualifiedName": "de.schildbach.wallet.util.BluetoothTest.getBluetooth()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.BluetoothTest.isBluetoothUri()": {
            "qualifiedName": "de.schildbach.wallet.util.BluetoothTest.isBluetoothUri()",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.util.CheatSheet": {
        "qualifiedName": "de.schildbach.wallet.util.CheatSheet",
        "methods": {
          "de.schildbach.wallet.util.CheatSheet.de.schildbach.wallet.util.CheatSheet()": {
            "qualifiedName": "de.schildbach.wallet.util.CheatSheet.de.schildbach.wallet.util.CheatSheet()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.CheatSheet.remove(android.view.View)": {
            "qualifiedName": "de.schildbach.wallet.util.CheatSheet.remove(android.view.View)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.CheatSheet.setup(android.view.View)": {
            "qualifiedName": "de.schildbach.wallet.util.CheatSheet.setup(android.view.View)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.CheatSheet.setup(android.view.View,int)": {
            "qualifiedName": "de.schildbach.wallet.util.CheatSheet.setup(android.view.View,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.CheatSheet.setup(android.view.View,java.lang.CharSequence)": {
            "qualifiedName": "de.schildbach.wallet.util.CheatSheet.setup(android.view.View,java.lang.CharSequence)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.util.CrashReporter": {
        "qualifiedName": "de.schildbach.wallet.util.CrashReporter",
        "methods": {
          "de.schildbach.wallet.util.CrashReporter.appendInstalledPackages(java.lang.Appendable,android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.util.CrashReporter.appendInstalledPackages(java.lang.Appendable,android.content.Context)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.CrashReporter.appendSavedCrashTrace(java.lang.Appendable)": {
            "qualifiedName": "de.schildbach.wallet.util.CrashReporter.appendSavedCrashTrace(java.lang.Appendable)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.CrashReporter.collectSavedBackgroundTraces(java.io.File)": {
            "qualifiedName": "de.schildbach.wallet.util.CrashReporter.collectSavedBackgroundTraces(java.io.File)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.CrashReporter.de.schildbach.wallet.util.CrashReporter()": {
            "qualifiedName": "de.schildbach.wallet.util.CrashReporter.de.schildbach.wallet.util.CrashReporter()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.CrashReporter.deleteSaveCrashTrace()": {
            "qualifiedName": "de.schildbach.wallet.util.CrashReporter.deleteSaveCrashTrace()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.CrashReporter.hasSavedCrashTrace()": {
            "qualifiedName": "de.schildbach.wallet.util.CrashReporter.hasSavedCrashTrace()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.CrashReporter.init(java.io.File)": {
            "qualifiedName": "de.schildbach.wallet.util.CrashReporter.init(java.io.File)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.CrashReporter.saveBackgroundTrace(java.lang.Throwable,android.content.pm.PackageInfo)": {
            "qualifiedName": "de.schildbach.wallet.util.CrashReporter.saveBackgroundTrace(java.lang.Throwable,android.content.pm.PackageInfo)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.util.CrashReporter$ExceptionHandler": {
        "qualifiedName": "de.schildbach.wallet.util.CrashReporter$ExceptionHandler",
        "methods": {
          "de.schildbach.wallet.util.CrashReporter$ExceptionHandler.de.schildbach.wallet.util.CrashReporter$ExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)": {
            "qualifiedName": "de.schildbach.wallet.util.CrashReporter$ExceptionHandler.de.schildbach.wallet.util.CrashReporter$ExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.CrashReporter$ExceptionHandler.uncaughtException(java.lang.Thread,java.lang.Throwable)": {
            "qualifiedName": "de.schildbach.wallet.util.CrashReporter$ExceptionHandler.uncaughtException(java.lang.Thread,java.lang.Throwable)",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.util.Crypto": {
        "qualifiedName": "de.schildbach.wallet.util.Crypto",
        "methods": {
          "de.schildbach.wallet.util.Crypto.de.schildbach.wallet.util.Crypto()": {
            "qualifiedName": "de.schildbach.wallet.util.Crypto.de.schildbach.wallet.util.Crypto()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Crypto.decrypt(java.lang.String,char[])": {
            "qualifiedName": "de.schildbach.wallet.util.Crypto.decrypt(java.lang.String,char[])",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.Crypto.decryptBytes(java.lang.String,char[])": {
            "qualifiedName": "de.schildbach.wallet.util.Crypto.decryptBytes(java.lang.String,char[])",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.Crypto.encrypt(byte[],char[])": {
            "qualifiedName": "de.schildbach.wallet.util.Crypto.encrypt(byte[],char[])",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Crypto.encrypt(java.lang.String,char[])": {
            "qualifiedName": "de.schildbach.wallet.util.Crypto.encrypt(java.lang.String,char[])",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.util.CryptoTest": {
        "qualifiedName": "de.schildbach.wallet.util.CryptoTest",
        "methods": {
          "de.schildbach.wallet.util.CryptoTest.backups()": {
            "qualifiedName": "de.schildbach.wallet.util.CryptoTest.backups()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.CryptoTest.de.schildbach.wallet.util.CryptoTest()": {
            "qualifiedName": "de.schildbach.wallet.util.CryptoTest.de.schildbach.wallet.util.CryptoTest()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.util.CryptoTest.roundtripBytes()": {
            "qualifiedName": "de.schildbach.wallet.util.CryptoTest.roundtripBytes()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.CryptoTest.roundtripDifferentByteSizes()": {
            "qualifiedName": "de.schildbach.wallet.util.CryptoTest.roundtripDifferentByteSizes()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.CryptoTest.roundtripDifferentPasswordSizes()": {
            "qualifiedName": "de.schildbach.wallet.util.CryptoTest.roundtripDifferentPasswordSizes()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.CryptoTest.roundtripDifferentTextSizes()": {
            "qualifiedName": "de.schildbach.wallet.util.CryptoTest.roundtripDifferentTextSizes()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.CryptoTest.roundtripText()": {
            "qualifiedName": "de.schildbach.wallet.util.CryptoTest.roundtripText()",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.util.Formats": {
        "qualifiedName": "de.schildbach.wallet.util.Formats",
        "methods": {
          "de.schildbach.wallet.util.Formats.de.schildbach.wallet.util.Formats()": {
            "qualifiedName": "de.schildbach.wallet.util.Formats.de.schildbach.wallet.util.Formats()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Formats.sanitizeMemo(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Formats.sanitizeMemo(java.lang.String)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.util.FormatsTest": {
        "qualifiedName": "de.schildbach.wallet.util.FormatsTest",
        "methods": {
          "de.schildbach.wallet.util.FormatsTest.de.schildbach.wallet.util.FormatsTest()": {
            "qualifiedName": "de.schildbach.wallet.util.FormatsTest.de.schildbach.wallet.util.FormatsTest()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.FormatsTest.monetarySpannable()": {
            "qualifiedName": "de.schildbach.wallet.util.FormatsTest.monetarySpannable()",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.util.GenericUtils": {
        "qualifiedName": "de.schildbach.wallet.util.GenericUtils",
        "methods": {
          "de.schildbach.wallet.util.GenericUtils.currencySymbol(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.GenericUtils.currencySymbol(java.lang.String)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.util.GenericUtils.de.schildbach.wallet.util.GenericUtils()": {
            "qualifiedName": "de.schildbach.wallet.util.GenericUtils.de.schildbach.wallet.util.GenericUtils()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.GenericUtils.startsWithIgnoreCase(java.lang.String,java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.GenericUtils.startsWithIgnoreCase(java.lang.String,java.lang.String)",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.util.Io": {
        "qualifiedName": "de.schildbach.wallet.util.Io",
        "methods": {
          "de.schildbach.wallet.util.Io.copy(java.io.InputStream,java.io.OutputStream)": {
            "qualifiedName": "de.schildbach.wallet.util.Io.copy(java.io.InputStream,java.io.OutputStream)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Io.copy(java.io.Reader,java.lang.StringBuilder)": {
            "qualifiedName": "de.schildbach.wallet.util.Io.copy(java.io.Reader,java.lang.StringBuilder)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Io.copy(java.io.Reader,java.lang.StringBuilder,long)": {
            "qualifiedName": "de.schildbach.wallet.util.Io.copy(java.io.Reader,java.lang.StringBuilder,long)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Io.de.schildbach.wallet.util.Io()": {
            "qualifiedName": "de.schildbach.wallet.util.Io.de.schildbach.wallet.util.Io()",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.util.Iso8601Format": {
        "qualifiedName": "de.schildbach.wallet.util.Iso8601Format",
        "methods": {
          "de.schildbach.wallet.util.Iso8601Format.formatDateTime(java.util.Date)": {
            "qualifiedName": "de.schildbach.wallet.util.Iso8601Format.formatDateTime(java.util.Date)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.util.Iso8601Format.formatDateTimeT(java.util.Date)": {
            "qualifiedName": "de.schildbach.wallet.util.Iso8601Format.formatDateTimeT(java.util.Date)",
            "layer": "Utility Layer"
          },
          "de.schildbach.wallet.util.Iso8601Format.newDateFormat()": {
            "qualifiedName": "de.schildbach.wallet.util.Iso8601Format.newDateFormat()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Iso8601Format.newDateTimeFormat()": {
            "qualifiedName": "de.schildbach.wallet.util.Iso8601Format.newDateTimeFormat()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Iso8601Format.newDateTimeFormatT()": {
            "qualifiedName": "de.schildbach.wallet.util.Iso8601Format.newDateTimeFormatT()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Iso8601Format.newTimeFormat()": {
            "qualifiedName": "de.schildbach.wallet.util.Iso8601Format.newTimeFormat()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Iso8601Format.parseDateTime(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Iso8601Format.parseDateTime(java.lang.String)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Iso8601Format.parseDateTimeT(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Iso8601Format.parseDateTimeT(java.lang.String)",
            "layer": "Service Layer"
          }
        }
      },
      "de.schildbach.wallet.util.MonetarySpannable": {
        "qualifiedName": "de.schildbach.wallet.util.MonetarySpannable",
        "methods": {
          "de.schildbach.wallet.util.MonetarySpannable.applyMarkup(android.text.Spannable,java.lang.Object[],java.lang.Object[],java.lang.Object[])": {
            "qualifiedName": "de.schildbach.wallet.util.MonetarySpannable.applyMarkup(android.text.Spannable,java.lang.Object[],java.lang.Object[],java.lang.Object[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.MonetarySpannable.applyMarkup(java.lang.Object[],java.lang.Object[])": {
            "qualifiedName": "de.schildbach.wallet.util.MonetarySpannable.applyMarkup(java.lang.Object[],java.lang.Object[])",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.MonetarySpannable.de.schildbach.wallet.util.MonetarySpannable(org.bitcoinj.utils.MonetaryFormat,boolean,org.bitcoinj.core.Monetary)": {
            "qualifiedName": "de.schildbach.wallet.util.MonetarySpannable.de.schildbach.wallet.util.MonetarySpannable(org.bitcoinj.utils.MonetaryFormat,boolean,org.bitcoinj.core.Monetary)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.MonetarySpannable.de.schildbach.wallet.util.MonetarySpannable(org.bitcoinj.utils.MonetaryFormat,org.bitcoinj.core.Monetary)": {
            "qualifiedName": "de.schildbach.wallet.util.MonetarySpannable.de.schildbach.wallet.util.MonetarySpannable(org.bitcoinj.utils.MonetaryFormat,org.bitcoinj.core.Monetary)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.util.Nfc": {
        "qualifiedName": "de.schildbach.wallet.util.Nfc",
        "methods": {
          "de.schildbach.wallet.util.Nfc.createMime(java.lang.String,byte[])": {
            "qualifiedName": "de.schildbach.wallet.util.Nfc.createMime(java.lang.String,byte[])",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Nfc.de.schildbach.wallet.util.Nfc()": {
            "qualifiedName": "de.schildbach.wallet.util.Nfc.de.schildbach.wallet.util.Nfc()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.Nfc.extractMimePayload(java.lang.String,android.nfc.NdefMessage)": {
            "qualifiedName": "de.schildbach.wallet.util.Nfc.extractMimePayload(java.lang.String,android.nfc.NdefMessage)",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.util.OnFirstPreDraw": {
        "qualifiedName": "de.schildbach.wallet.util.OnFirstPreDraw",
        "methods": {
          "de.schildbach.wallet.util.OnFirstPreDraw.listen(android.view.View,de.schildbach.wallet.util.OnFirstPreDraw$Callback)": {
            "qualifiedName": "de.schildbach.wallet.util.OnFirstPreDraw.listen(android.view.View,de.schildbach.wallet.util.OnFirstPreDraw$Callback)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.OnFirstPreDraw.onPreDraw()": {
            "qualifiedName": "de.schildbach.wallet.util.OnFirstPreDraw.onPreDraw()",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.util.OnFirstPreDraw$Callback": {
        "qualifiedName": "de.schildbach.wallet.util.OnFirstPreDraw$Callback",
        "methods": {
          "de.schildbach.wallet.util.OnFirstPreDraw$Callback.onFirstPreDraw()": {
            "qualifiedName": "de.schildbach.wallet.util.OnFirstPreDraw$Callback.onFirstPreDraw()",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.util.Qr": {
        "qualifiedName": "de.schildbach.wallet.util.Qr",
        "methods": {
          "de.schildbach.wallet.util.Qr.bitmap(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Qr.bitmap(java.lang.String)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.Qr.de.schildbach.wallet.util.Qr()": {
            "qualifiedName": "de.schildbach.wallet.util.Qr.de.schildbach.wallet.util.Qr()",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.Qr.decodeBinary(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Qr.decodeBinary(java.lang.String)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Qr.decodeDecompressBinary(java.lang.String)": {
            "qualifiedName": "de.schildbach.wallet.util.Qr.decodeDecompressBinary(java.lang.String)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Qr.encodeBinary(byte[])": {
            "qualifiedName": "de.schildbach.wallet.util.Qr.encodeBinary(byte[])",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.Qr.encodeCompressBinary(byte[])": {
            "qualifiedName": "de.schildbach.wallet.util.Qr.encodeCompressBinary(byte[])",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.util.Toast": {
        "qualifiedName": "de.schildbach.wallet.util.Toast",
        "methods": {
          "de.schildbach.wallet.util.Toast.de.schildbach.wallet.util.Toast(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.util.Toast.de.schildbach.wallet.util.Toast(android.content.Context)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.Toast.longToast(int,java.lang.Object[])": {
            "qualifiedName": "de.schildbach.wallet.util.Toast.longToast(int,java.lang.Object[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.Toast.longToast(java.lang.CharSequence)": {
            "qualifiedName": "de.schildbach.wallet.util.Toast.longToast(java.lang.CharSequence)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.Toast.postLongToast(int,java.lang.Object[])": {
            "qualifiedName": "de.schildbach.wallet.util.Toast.postLongToast(int,java.lang.Object[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.Toast.postLongToast(java.lang.CharSequence)": {
            "qualifiedName": "de.schildbach.wallet.util.Toast.postLongToast(java.lang.CharSequence)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.Toast.postToast(int,java.lang.Object[])": {
            "qualifiedName": "de.schildbach.wallet.util.Toast.postToast(int,java.lang.Object[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.Toast.postToast(java.lang.CharSequence)": {
            "qualifiedName": "de.schildbach.wallet.util.Toast.postToast(java.lang.CharSequence)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.Toast.toast(int,java.lang.Object[])": {
            "qualifiedName": "de.schildbach.wallet.util.Toast.toast(int,java.lang.Object[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.Toast.toast(java.lang.CharSequence)": {
            "qualifiedName": "de.schildbach.wallet.util.Toast.toast(java.lang.CharSequence)",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.util.ViewPagerTabs": {
        "qualifiedName": "de.schildbach.wallet.util.ViewPagerTabs",
        "methods": {
          "de.schildbach.wallet.util.ViewPagerTabs.addTabLabels(int[])": {
            "qualifiedName": "de.schildbach.wallet.util.ViewPagerTabs.addTabLabels(int[])",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.ViewPagerTabs.de.schildbach.wallet.util.ViewPagerTabs(android.content.Context,android.util.AttributeSet)": {
            "qualifiedName": "de.schildbach.wallet.util.ViewPagerTabs.de.schildbach.wallet.util.ViewPagerTabs(android.content.Context,android.util.AttributeSet)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.ViewPagerTabs.onPageScrollStateChanged(int)": {
            "qualifiedName": "de.schildbach.wallet.util.ViewPagerTabs.onPageScrollStateChanged(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.ViewPagerTabs.onPageScrolled(int,float,int)": {
            "qualifiedName": "de.schildbach.wallet.util.ViewPagerTabs.onPageScrolled(int,float,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.ViewPagerTabs.onPageSelected(int)": {
            "qualifiedName": "de.schildbach.wallet.util.ViewPagerTabs.onPageSelected(int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.ViewPagerTabs.onRestoreInstanceState(android.os.Parcelable)": {
            "qualifiedName": "de.schildbach.wallet.util.ViewPagerTabs.onRestoreInstanceState(android.os.Parcelable)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.ViewPagerTabs.onSaveInstanceState()": {
            "qualifiedName": "de.schildbach.wallet.util.ViewPagerTabs.onSaveInstanceState()",
            "layer": "Presentation Layer"
          }
        }
      },
      "de.schildbach.wallet.util.WalletUtils": {
        "qualifiedName": "de.schildbach.wallet.util.WalletUtils",
        "methods": {
          "de.schildbach.wallet.util.WalletUtils.autoBackupWallet(android.content.Context,org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.autoBackupWallet(android.content.Context,org.bitcoinj.wallet.Wallet)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.de.schildbach.wallet.util.WalletUtils()": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.de.schildbach.wallet.util.WalletUtils()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.WalletUtils.formatAddress(java.lang.String,org.bitcoinj.core.Address,int,int)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.formatAddress(java.lang.String,org.bitcoinj.core.Address,int,int)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.formatAddress(org.bitcoinj.core.Address,int,int)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.formatAddress(org.bitcoinj.core.Address,int,int)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.formatHash(java.lang.String,int,int)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.formatHash(java.lang.String,int,int)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.formatHash(java.lang.String,java.lang.String,int,int,char)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.formatHash(java.lang.String,java.lang.String,int,int,char)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.getToAddressOfSent(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.getToAddressOfSent(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.getWalletAddressOfReceived(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.getWalletAddressOfReceived(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.isEntirelySelf(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.isEntirelySelf(org.bitcoinj.core.Transaction,org.bitcoinj.wallet.Wallet)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.isPayToManyTransaction(org.bitcoinj.core.Transaction)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.isPayToManyTransaction(org.bitcoinj.core.Transaction)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.longHash(org.bitcoinj.core.Sha256Hash)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.longHash(org.bitcoinj.core.Sha256Hash)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.readKeys(java.io.BufferedReader,org.bitcoinj.core.NetworkParameters)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.readKeys(java.io.BufferedReader,org.bitcoinj.core.NetworkParameters)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.restorePrivateKeysFromBase58(java.io.InputStream,org.bitcoinj.core.NetworkParameters)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.restorePrivateKeysFromBase58(java.io.InputStream,org.bitcoinj.core.NetworkParameters)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.restoreWalletFromAutoBackup(android.content.Context)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.restoreWalletFromAutoBackup(android.content.Context)",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.restoreWalletFromProtobuf(java.io.InputStream,org.bitcoinj.core.NetworkParameters)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.restoreWalletFromProtobuf(java.io.InputStream,org.bitcoinj.core.NetworkParameters)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.restoreWalletFromProtobufOrBase58(java.io.InputStream,org.bitcoinj.core.NetworkParameters)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.restoreWalletFromProtobufOrBase58(java.io.InputStream,org.bitcoinj.core.NetworkParameters)",
            "layer": "Domain Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.walletFromByteArray(byte[])": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.walletFromByteArray(byte[])",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.walletToByteArray(org.bitcoinj.wallet.Wallet)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.walletToByteArray(org.bitcoinj.wallet.Wallet)",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.WalletUtils.writeKeys(java.io.Writer,java.util.List)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils.writeKeys(java.io.Writer,java.util.List)",
            "layer": "Domain Layer"
          }
        }
      },
      "de.schildbach.wallet.util.WalletUtils$MonospaceSpan": {
        "qualifiedName": "de.schildbach.wallet.util.WalletUtils$MonospaceSpan",
        "methods": {
          "de.schildbach.wallet.util.WalletUtils$MonospaceSpan.de.schildbach.wallet.util.WalletUtils$MonospaceSpan()": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils$MonospaceSpan.de.schildbach.wallet.util.WalletUtils$MonospaceSpan()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.WalletUtils$MonospaceSpan.equals(java.lang.Object)": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils$MonospaceSpan.equals(java.lang.Object)",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.WalletUtils$MonospaceSpan.hashCode()": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtils$MonospaceSpan.hashCode()",
            "layer": "Cross-Cutting"
          }
        }
      },
      "de.schildbach.wallet.util.WalletUtilsTest": {
        "qualifiedName": "de.schildbach.wallet.util.WalletUtilsTest",
        "methods": {
          "de.schildbach.wallet.util.WalletUtilsTest.de.schildbach.wallet.util.WalletUtilsTest()": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtilsTest.de.schildbach.wallet.util.WalletUtilsTest()",
            "layer": "Cross-Cutting"
          },
          "de.schildbach.wallet.util.WalletUtilsTest.restoreWalletFromBase58_wrongNetwork()": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtilsTest.restoreWalletFromBase58_wrongNetwork()",
            "layer": "Data Source Layer"
          },
          "de.schildbach.wallet.util.WalletUtilsTest.restoreWalletFromProtobufOrBase58()": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtilsTest.restoreWalletFromProtobufOrBase58()",
            "layer": "Service Layer"
          },
          "de.schildbach.wallet.util.WalletUtilsTest.restoreWalletFromProtobuf_wrongNetwork()": {
            "qualifiedName": "de.schildbach.wallet.util.WalletUtilsTest.restoreWalletFromProtobuf_wrongNetwork()",
            "layer": "Data Source Layer"
          }
        }
      },
      "de.schildbach.wallet.util.WholeStringBuilder": {
        "qualifiedName": "de.schildbach.wallet.util.WholeStringBuilder",
        "methods": {
          "de.schildbach.wallet.util.WholeStringBuilder.bold(java.lang.CharSequence)": {
            "qualifiedName": "de.schildbach.wallet.util.WholeStringBuilder.bold(java.lang.CharSequence)",
            "layer": "Presentation Layer"
          },
          "de.schildbach.wallet.util.WholeStringBuilder.de.schildbach.wallet.util.WholeStringBuilder(java.lang.CharSequence,java.lang.Object)": {
            "qualifiedName": "de.schildbach.wallet.util.WholeStringBuilder.de.schildbach.wallet.util.WholeStringBuilder(java.lang.CharSequence,java.lang.Object)",
            "layer": "Cross-Cutting"
          }
        }
      }
    }
  }
}